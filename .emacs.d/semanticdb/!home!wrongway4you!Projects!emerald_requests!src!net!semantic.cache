;; Object net/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "net/"
  :tables
  (list
    (semanticdb-table "net.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("net/net.hpp" include nil nil [1 23])
            ("cstring" include (:system-flag t) nil [25 43])
            ("emerald_requests.hpp" include nil nil [45 76])
            ("utils/utils.hpp" include nil nil [77 103])
            ("std::string" using (:type ("std::string" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [105 123])
            ("emerald_requests::ErrorCode" using (:type ("emerald_requests::ErrorCode" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [125 159])
            ("emerald_requests::utils::set_err_code" using (:type ("emerald_requests::utils::set_err_code" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [160 204])
            ("ip_from_hostname" function
               (:parent "emerald_requests::net"
                :arguments 
                  ( ("hostname" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [260 283])
                    ("ip" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [292 305]))                  
                :type "bool")
                nil [206 719]))          
      :file "net.cpp"
      :pointmax 720
      :fsize 719
      :lastmodtime '(22569 60974 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "socket.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("net/socket.hpp" include nil nil [1 26])
            ("string.h" include (:system-flag t) nil [28 47])
            ("emerald_requests.hpp" include nil nil [165 196])
            ("net/net.hpp" include nil nil [197 219])
            ("utils/utils.hpp" include nil nil [220 246])
            ("emerald_requests::ErrorCode" using (:type ("emerald_requests::ErrorCode" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [248 282])
            ("emerald_requests::net::SA" using (:type ("emerald_requests::net::SA" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [283 315])
            ("emerald_requests::net::CLOSED_SOCKET" using (:type ("emerald_requests::net::CLOSED_SOCKET" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [316 359])
            ("emerald_requests::net::ip_from_hostname" using (:type ("emerald_requests::net::ip_from_hostname" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [360 406])
            ("emerald_requests::utils::set_err_code" using (:type ("emerald_requests::utils::set_err_code" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [407 451])
            ("set_ssl" function
               (:parent "emerald_requests::net::Socket"
                :arguments 
                  ( ("b" variable
                       (:reference 1
                        :constant-flag t
                        :type "bool")
                        (reparse-symbol arg-sub-list) [513 527]))                  
                :type "void")
                nil [464 548])
            ("set_port" function
               (:parent "emerald_requests::net::Socket"
                :arguments 
                  ( ("port" variable
                       (:reference 1
                        :constant-flag t
                        :type ("uint16_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [600 621]))                  
                :type "void")
                nil [550 664])
            ("connect_" function
               (:parent "emerald_requests::net::Socket"
                :type "bool")
                nil [666 2623])
            ("write_" function
               (:parent "emerald_requests::net::Socket"
                :arguments 
                  ( ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2673 2692]))                  
                :type "bool")
                nil [2625 3361])
            ("read_" function
               (:parent "emerald_requests::net::Socket"
                :arguments 
                  ( ("dst" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3410 3422]))                  
                :type "bool")
                nil [3363 4684])
            ("set_host" function
               (:parent "emerald_requests::net::Socket"
                :arguments 
                  ( ("host" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4736 4755]))                  
                :type "bool")
                nil [4686 4887])
            ("cleanup_" function
               (:parent "emerald_requests::net::Socket"
                :type "bool")
                nil [4889 5398])
            ("Socket" function
               (:parent "emerald_requests::net::Socket"
                :type "int")
                nil [5400 5649])
            ("Socket" function
               (:destructor-flag t
                :parent "emerald_requests::net::Socket"
                :type "void")
                nil [5651 5711]))          
      :file "socket.cpp"
      :pointmax 5712
      :fsize 5711
      :lastmodtime '(22569 61019 0 0)
      :unmatched-syntax nil))
  :file "!home!wrongway4you!Projects!emerald_requests!src!net!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

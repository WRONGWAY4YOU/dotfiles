;; Object net/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "net/"
  :tables
  (list
    (semanticdb-table "ange-ftp.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("comint" include nil nil [31101 31118])
            ("ange-ftp" customgroup (:user-visible-flag t) nil [31288 31418])
            ("ange-ftp-name-format" variable (:default-value (quote ("\\`/\\(\\([^/:]*\\)@\\)?\\([^@/:]*[^@/:.]\\):\\(.*\\)" 3 2 4))) nil [31420 31983])
            ("ange-ftp-multi-msgs" variable (:default-value "^150-\\|^220-\\|^230-\\|^226\\|^25.-\\|^221-\\|^200-\\|^331-\\|^4[25]1-\\|^530-") nil [32211 32391])
            ("ange-ftp-good-msgs" variable (:default-value "^220 \\|^230 \\|^226 \\|^25. \\|^221 \\|^200 \\|^[Hh]ash mark\\|^Remote directory:") nil [32393 32565])
            ("ange-ftp-skip-msgs" variable (:default-value (concat "^200 \\(PORT\\|Port\\) \\|^331 \\|^150 \\|^350 \\|^[0-9]+ bytes \\|" "^Connected \\|^$\\|^Remote system\\|^Using\\|^ \\|Password:\\|" "^Data connection \\|" "^local:\\|^Trying\\|^125 \\|^550-\\|^221 .*oodbye\\|" "^500 .*AUTH\\|^KERBEROS\\|" "^500 This security scheme is not implemented\\|" "^504 Unknown security mechanism\\|" "^530 Please login with USER and PASS\\|" "^534 Kerberos Authentication not enabled\\|" "^22[789] .*[Pp]assive\\|^200 EPRT\\|^500 .*EPRT\\|^500 .*EPSV")) nil [33162 33888])
            ("ange-ftp-fatal-msgs" variable (:default-value (concat "^ftp: \\|^Not connected\\|^530 \\|^4[25]1 \\|rcmd: \\|" "^No control connection\\|unknown host\\|^lost connection")) nil [33890 34234])
            ("ange-ftp-potential-error-msgs" variable (:default-value "^ftp: connect to address .*: No route to host") nil [34236 34853])
            ("ange-ftp-gateway-fatal-msgs" variable (:default-value "No route to host\\|Connection closed\\|No such host\\|Login incorrect") nil [34855 35078])
            ("ange-ftp-xfer-size-msgs" variable (:default-value "^150 .* connection for .* (\\([0-9]+\\) bytes)") nil [35080 35281])
            ("ange-ftp-tmp-name-template" variable (:default-value (expand-file-name "ange-ftp" temporary-file-directory)) nil [35283 35461])
            ("ange-ftp-gateway-tmp-name-template" variable (:default-value "/tmp/ange-ftp") nil [35463 35877])
            ("ange-ftp-netrc-filename" variable (:default-value "~/.netrc") nil [35879 36009])
            ("ange-ftp-disable-netrc-security-check" variable (:default-value (eq system-type (quote windows-nt))) nil [36011 36187])
            ("ange-ftp-default-user" variable nil nil [36189 36845])
            ("ange-ftp-netrc-default-user" variable nil nil [36847 37116])
            ("ange-ftp-default-password" variable nil nil [37118 37304])
            ("ange-ftp-default-account" variable nil nil [37306 37490])
            ("ange-ftp-netrc-default-password" variable nil nil [37492 37690])
            ("ange-ftp-netrc-default-account" variable nil nil [37692 37888])
            ("ange-ftp-generate-anonymous-password" variable (:default-value t) nil [37890 38212])
            ("ange-ftp-dumb-unix-host-regexp" variable nil nil [38214 38412])
            ("ange-ftp-binary-file-name-regexp" variable nil nil [38414 38587])
            ("ange-ftp-gateway-host" variable nil nil [38589 38774])
            ("ange-ftp-local-host-regexp" variable (:default-value ".*") nil [38776 39057])
            ("ange-ftp-gateway-program-interactive" variable nil nil [39059 39263])
            ("ange-ftp-gateway-program" variable (:default-value remote-shell-program) nil [39265 39591])
            ("ange-ftp-gateway-prompt-pattern" variable (:default-value "^[^#$%>;
]*[#$%>;] *") nil [39593 40023])
            ("ange-ftp-gateway-setup-term-command" variable (:default-value (if (eq system-type (quote hpux)) "stty -onlcr -echo
" "stty -echo nl
")) nil [40025 40324])
            ("ange-ftp-smart-gateway" variable nil nil [40326 40673])
            ("ange-ftp-smart-gateway-port" variable (:default-value "21") nil [40675 40825])
            ("ange-ftp-send-hash" variable (:default-value t) nil [40827 40952])
            ("ange-ftp-binary-hash-mark-size" variable nil nil [40954 41337])
            ("ange-ftp-ascii-hash-mark-size" variable (:default-value 1024) nil [41339 41629])
            ("ange-ftp-process-verbose" variable (:default-value t) nil [41631 41775])
            ("ange-ftp-ftp-program-name" variable (:default-value "ftp") nil [41777 41887])
            ("ange-ftp-gateway-ftp-program-name" variable (:default-value "ftp") nil [41889 42098])
            ("ange-ftp-ftp-program-args" variable (:default-value (quote ("-i" "-n" "-g" "-v"))) nil [42100 42268])
            ("ange-ftp-nslookup-program" variable nil nil [42270 42444])
            ("ange-ftp-make-backup-files" variable nil nil [42446 42587])
            ("ange-ftp-retry-time" variable (:default-value 5) nil [42589 42795])
            ("ange-ftp-auto-save" variable nil nil [42797 43039])
            ("ange-ftp-try-passive-mode" variable nil nil [43041 43213])
            ("ange-ftp-passive-host-alist" variable nil nil [43215 43709])
            ("backquote" include nil nil [43870 43890])
            ("ange-ftp-hash-entry-exists-p" function (:arguments ("key" "tbl")) nil [43892 44062])
            ("ange-ftp-hash-table-keys" function (:arguments ("tbl")) nil [44064 44331])
            ("ange-ftp-data-buffer-name" variable (:default-value " *ftp data*") nil [44492 44614])
            ("ange-ftp-netrc-modtime" variable nil nil [44616 44714])
            ("ange-ftp-user-hashtable" variable (:default-value (make-hash-table :test (quote equal))) nil [44716 44841])
            ("ange-ftp-passwd-hashtable" variable (:default-value (make-hash-table :test (quote equal))) nil [44843 45012])
            ("ange-ftp-account-hashtable" variable (:default-value (make-hash-table :test (quote equal))) nil [45014 45152])
            ("ange-ftp-files-hashtable" variable (:default-value (make-hash-table :test (quote equal) :size 97)) nil [45154 45294])
            ("ange-ftp-inodes-hashtable" variable (:default-value (make-hash-table :test (quote equal) :size 97)) nil [45296 45437])
            ("ange-ftp-next-inode-number" variable (:default-value 1) nil [45439 45550])
            ("ange-ftp-ls-cache-lsargs" variable nil nil [45552 45633])
            ("ange-ftp-ls-cache-file" variable nil nil [45635 45709])
            ("ange-ftp-ls-cache-res" variable nil nil [45711 45790])
            ("ange-ftp-expand-dir-hashtable" variable
               (:constant-flag t
                :default-value (make-hash-table :test (quote equal)))
                nil [45792 45863])
            ("ange-ftp-expand-dir-regexp" variable
               (:constant-flag t
                :default-value "^5.0 \\([^: ]+\\):")
                nil [45865 45923])
            ("ange-ftp-hash-mark-unit" variable nil nil [45982 46018])
            ("ange-ftp-hash-mark-count" variable nil nil [46019 46056])
            ("ange-ftp-xfer-size" variable nil nil [46057 46088])
            ("ange-ftp-process-string" variable nil nil [46089 46125])
            ("ange-ftp-process-result-line" variable nil nil [46126 46167])
            ("ange-ftp-pending-error-line" variable nil nil [46168 46208])
            ("ange-ftp-process-busy" variable nil nil [46209 46243])
            ("ange-ftp-process-result" variable nil nil [46244 46280])
            ("ange-ftp-process-multi-skip" variable nil nil [46281 46321])
            ("ange-ftp-process-msg" variable nil nil [46322 46355])
            ("ange-ftp-process-continue" variable nil nil [46356 46394])
            ("ange-ftp-last-percent" variable nil nil [46395 46429])
            ("ange-ftp-this-file" variable nil nil [46549 46576])
            ("ange-ftp-this-dir" variable nil nil [46577 46603])
            ("ange-ftp-this-user" variable nil nil [46604 46631])
            ("ange-ftp-this-host" variable nil nil [46632 46659])
            ("ange-ftp-this-msg" variable nil nil [46660 46686])
            ("ange-ftp-completion-ignored-pattern" variable nil nil [46687 46731])
            ("ange-ftp-trample-marker" variable nil nil [46732 46764])
            ("define-error" code nil nil [46789 46830])
            ("ange-ftp-message" function (:arguments ("fmt" "args")) nil [47007 47462])
            ("ange-ftp-abbreviate-filename" function (:arguments ("file" "new")) nil [47464 48064])
            ("ange-ftp-set-user" function
               (:user-visible-flag t
                :arguments ("host" "user"))
                nil [48234 48406])
            ("ange-ftp-get-user" function (:arguments ("host")) nil [48408 49016])
            ("ange-ftp-generate-passwd-key" function (:arguments ("host" "user")) nil [49175 49303])
            ("ange-ftp-lookup-passwd" function (:arguments ("host" "user")) nil [49305 49437])
            ("ange-ftp-set-passwd" function
               (:user-visible-flag t
                :arguments ("host" "user" "password"))
                nil [49439 49759])
            ("ange-ftp-get-host-with-passwd" function (:arguments ("user")) nil [49761 50370])
            ("ange-ftp-get-passwd" function (:arguments ("host" "user")) nil [50372 52265])
            ("ange-ftp-set-account" function
               (:user-visible-flag t
                :arguments ("host" "user" "account"))
                nil [52665 53001])
            ("ange-ftp-get-account" function (:arguments ("host" "user")) nil [53003 53468])
            ("ange-ftp-chase-symlinks" function (:arguments ("file")) nil [53626 54056])
            ("ange-ftp-parse-netrc-token" function (:arguments ("token" "limit")) nil [54245 54693])
            ("ange-ftp-parse-netrc-group" function nil nil [54853 56416])
            ("ange-ftp-parse-netrc" function nil nil [56613 58223])
            ("ange-ftp-generate-root-prefixes" function nil nil [58341 58847])
            ("ange-ftp-ftp-name-component" function (:arguments ("n" "ns" "name")) nil [59021 59184])
            ("ange-ftp-ftp-name-arg" variable nil nil [59186 59219])
            ("ange-ftp-ftp-name-res" variable nil nil [59220 59254])
            ("ange-ftp-ftp-name" function (:arguments ("name")) nil [59397 59977])
            ("ange-ftp-replace-name-component" function (:arguments ("fullname" "name")) nil [60090 60405])
            ("ange-ftp-repaint-minibuffer" function nil nil [60679 60810])
            ("ange-ftp-ftp-process-buffer" function (:arguments ("host" "user")) nil [60933 61017])
            ("ange-ftp-error" function (:arguments ("host" "user" "msg")) nil [61156 61533])
            ("ange-ftp-set-buffer-mode" function nil nil [61535 61765])
            ("ange-ftp-kill-ftp-process" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [61767 62488])
            ("ange-ftp-quote-string" function (:arguments ("string")) nil [62490 62928])
            ("ange-ftp-barf-if-not-directory" function (:arguments ("directory")) nil [62930 63187])
            ("ange-ftp-process-handle-line" function (:arguments ("line" "proc")) nil [63356 64955])
            ("ange-ftp-set-xfer-size" function (:arguments ("host" "user" "bytes")) nil [64957 65359])
            ("ange-ftp-process-handle-hash" function (:arguments ("string")) nil [65361 66453])
            ("ange-ftp-call-cont" function (:arguments ("cont" "result" "line")) nil [66715 66914])
            ("ange-ftp-process-filter" function (:arguments ("proc" "str")) nil [67040 69840])
            ("ange-ftp-process-sentinel" function (:arguments ("proc" "str")) nil [69842 70211])
            ("ange-ftp-use-gateway-p" function (:arguments ("host")) nil [70369 70693])
            ("ange-ftp-use-smart-gateway-p" function (:arguments ("host")) nil [70695 70892])
            ("ange-ftp-make-tmp-name" function (:arguments ("host" "suffix")) nil [71071 71323])
            ("ange-ftp-del-tmp-name" function (:arguments ("filename")) nil [71325 71426])
            ("ange-ftp-gwp-running" variable (:default-value t) nil [71605 71636])
            ("ange-ftp-gwp-status" variable nil nil [71637 71669])
            ("ange-ftp-gwp-sentinel" function (:arguments ("proc" "str")) nil [71671 71745])
            ("ange-ftp-gwp-filter" function (:arguments ("proc" "str")) nil [71747 72878])
            ("ange-ftp-gwp-start" function (:arguments ("host" "user" "name" "args")) nil [72880 74643])
            ("ange-ftp-raw-send-cmd" function (:arguments ("proc" "cmd" "msg" "cont" "nowait")) nil [74833 76653])
            ("ange-ftp-wait-not-busy" function (:arguments ("proc")) nil [76709 77521])
            ("ange-ftp-nslookup-host" function
               (:user-visible-flag t
                :arguments ("hostname"))
                nil [77523 78493])
            ("ange-ftp-start-process" function (:arguments ("host" "user" "name")) nil [78495 81630])
            ("define-derived-mode" code nil nil [81632 82908])
            ("ange-ftp-raw-login" variable nil nil [82910 83122])
            ("ange-ftp-smart-login" function (:arguments ("host" "user" "password" "account" "proc")) nil [83124 84181])
            ("ange-ftp-normal-login" function (:arguments ("host" "user" "password" "account" "proc")) nil [84183 86549])
            ("ange-ftp-hash-mark-msgs" variable (:default-value "[hH]ash mark [^0-9]*\\([0-9]+\\)") nil [86608 86748])
            ("ange-ftp-guess-hash-mark-size" function (:arguments ("proc")) nil [86750 87324])
            ("ange-ftp-process-startup-hook" variable nil nil [87326 87368])
            ("ange-ftp-get-process" function (:arguments ("host" "user")) nil [87370 89124])
            ("ange-ftp-passive-mode" function (:arguments ("proc" "on-or-off")) nil [89126 89507])
            ("ange-ftp-host-cache" variable nil nil [89553 89585])
            ("ange-ftp-host-type-cache" variable nil nil [89586 89623])
            ("ange-ftp-host-type" function (:arguments ("host" "user")) nil [89952 91296])
            ("ange-ftp-fix-name-func-alist" variable nil nil [91790 92045])
            ("ange-ftp-fix-dir-name-func-alist" variable nil nil [92047 92324])
            ("ange-ftp-dumb-host-types" variable (:default-value (quote (dumb-unix))) nil [92467 92583])
            ("ange-ftp-send-cmd" function (:arguments ("host" "user" "cmd" "msg" "cont" "nowait")) nil [92585 97692])
            ("ange-ftp-cms-name-template" variable
               (:constant-flag t
                :default-value (concat "^[-A-Z0-9$*][-A-Z0-9$*]?[-A-Z0-9$*]?[-A-Z0-9$*]?[-A-Z0-9$*]?" "[-A-Z0-9$*]?[-A-Z0-9$*]?[-A-Z0-9$*]?\\.[0-9][0-9][0-9A-Z]$"))
                nil [97918 98096])
            ("ange-ftp-vms-name-template" variable
               (:constant-flag t
                :default-value "^[-A-Z0-9_$]+:\\[[-A-Z0-9_$]+\\(\\.[-A-Z0-9_$]+\\)*\\]$")
                nil [98097 98194])
            ("ange-ftp-mts-name-template" variable
               (:constant-flag t
                :default-value "^[A-Z0-9._][A-Z0-9._][A-Z0-9._][A-Z0-9._]:$")
                nil [98195 98280])
            ("ange-ftp-bs2000-filename-pubset-regexp" variable
               (:constant-flag t
                :default-value ":[A-Z0-9]+:")
                nil [98281 98388])
            ("ange-ftp-bs2000-filename-username-regexp" variable
               (:constant-flag t
                :default-value (concat "\\$[A-Z0-9]*\\."))
                nil [98389 98516])
            ("ange-ftp-bs2000-filename-prefix-regexp" variable
               (:constant-flag t
                :default-value (concat ange-ftp-bs2000-filename-pubset-regexp ange-ftp-bs2000-filename-username-regexp))
                nil [98517 98723])
            ("ange-ftp-bs2000-name-template" variable
               (:constant-flag t
                :default-value (concat "^" ange-ftp-bs2000-filename-prefix-regexp "$"))
                nil [98724 98822])
            ("ange-ftp-guess-host-type" function (:arguments ("host" "user")) nil [98824 101685])
            ("ange-ftp-dumb-unix-host" function (:arguments ("host")) nil [101976 102118])
            ("ange-ftp-add-dumb-unix-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [102120 102638])
            ("ange-ftp-parse-list-func-alist" variable nil nil [102640 102889])
            ("ange-ftp-before-parse-ls-hook" variable nil nil [103975 104090])
            ("ange-ftp-after-parse-ls-hook" variable nil nil [104092 104205])
            ("ange-ftp-ls" function (:arguments ("file" "lsargs" "parse" "no-error" "wildcard")) nil [104207 108119])
            ("ange-ftp-add-file-entry-alist" variable nil nil [108299 108586])
            ("ange-ftp-delete-file-entry-alist" variable nil nil [108588 108877])
            ("ange-ftp-add-file-entry" function (:arguments ("name" "dir-p")) nil [108879 109215])
            ("ange-ftp-delete-file-entry" function (:arguments ("name" "dir-p")) nil [109217 109567])
            ("ange-ftp-parse-filename" function nil nil [109569 109889])
            ("ange-ftp-ls-parser" function (:arguments ("switches")) nil [110068 111826])
            ("ange-ftp-dl-dir-regexp" variable nil nil [111871 112073])
            ("ange-ftp-add-dl-dir" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [112075 112587])
            ("ange-ftp-dl-parser" function nil nil [112589 113109])
            ("ange-ftp-parse-dired-listing" function (:arguments ("switches")) nil [113296 114396])
            ("ange-ftp-set-files" function (:arguments ("directory" "files")) nil [114398 114613])
            ("ange-ftp-switches-ok" function (:arguments ("switches")) nil [114615 115162])
            ("ange-ftp-get-files" function (:arguments ("directory" "no-error")) nil [115164 116008])
            ("ange-ftp-get-file-part" function (:arguments ("name")) nil [116114 116254])
            ("dired-local-variables-file" variable nil nil [116714 116749])
            ("ange-ftp-allow-child-lookup" function (:arguments ("dir" "file")) nil [116750 117549])
            ("ange-ftp-file-entry-p" function (:arguments ("name")) nil [117551 118576])
            ("ange-ftp-get-file-entry" function (:arguments ("name")) nil [118578 119261])
            ("ange-ftp-internal-delete-file-entry" function (:arguments ("name" "dir-p")) nil [119263 119799])
            ("ange-ftp-internal-add-file-entry" function (:arguments ("name" "dir-p")) nil [119801 120072])
            ("ange-ftp-wipe-file-entries" function (:arguments ("host" "user")) nil [120074 120672])
            ("ange-ftp-set-binary-mode" function (:arguments ("host" "user")) nil [120841 121420])
            ("ange-ftp-set-ascii-mode" function (:arguments ("host" "user")) nil [121422 121995])
            ("ange-ftp-cd" function (:arguments ("host" "user" "dir" "noerror")) nil [121998 122240])
            ("ange-ftp-get-pwd" function (:arguments ("host" "user")) nil [122242 122986])
            ("ange-ftp-expand-dir" function (:arguments ("host" "user" "dir")) nil [123182 124768])
            ("ange-ftp-canonize-filename" function (:arguments ("n")) nil [124770 127491])
            ("ange-ftp-expand-file-name" function (:arguments ("name" "default")) nil [127493 128022])
            ("ange-ftp-file-name-as-directory-alist" variable nil nil [128082 128253])
            ("ange-ftp-file-name-as-directory" function (:arguments ("name")) nil [128255 128680])
            ("ange-ftp-file-name-directory" function (:arguments ("name")) nil [128682 129070])
            ("ange-ftp-file-name-nondirectory" function (:arguments ("name")) nil [129072 129419])
            ("ange-ftp-directory-file-name" function (:arguments ("dir")) nil [129421 129703])
            ("ange-ftp-binary-file" function (:arguments ("file")) nil [129807 129899])
            ("ange-ftp-write-region" function (:arguments ("start" "end" "filename" "append" "visit")) nil [129901 132422])
            ("ange-ftp-insert-file-contents" function (:arguments ("filename" "visit" "beg" "end" "replace")) nil [132424 134696])
            ("ange-ftp-expand-symlink" function (:arguments ("file" "dir")) nil [134698 135020])
            ("ange-ftp-file-symlink-p" function (:arguments ("file")) nil [135022 135736])
            ("ange-ftp-file-exists-p" function (:arguments ("name")) nil [135738 136144])
            ("ange-ftp-file-directory-p" function (:arguments ("name")) nil [136146 136889])
            ("ange-ftp-directory-files" function (:arguments ("directory" "full" "match" "v19-args")) nil [136891 137548])
            ("ange-ftp-directory-files-and-attributes" function (:arguments ("directory" "full" "match" "nosort" "id-format")) nil [137550 137994])
            ("ange-ftp-file-attributes" function (:arguments ("file" "id-format")) nil [137996 139314])
            ("ange-ftp-file-newer-than-file-p" function (:arguments ("f1" "f2")) nil [139316 139771])
            ("ange-ftp-file-writable-p" function (:arguments ("file")) nil [139773 140070])
            ("ange-ftp-file-readable-p" function (:arguments ("file")) nil [140072 140291])
            ("ange-ftp-file-executable-p" function (:arguments ("file")) nil [140293 140516])
            ("ange-ftp-delete-file" function (:arguments ("file" "trash")) nil [140518 141293])
            ("ange-ftp-file-modtime" function (:arguments ("file")) nil [141295 142559])
            ("ange-ftp-verify-visited-file-modtime" function (:arguments ("buf")) nil [142561 142994])
            ("ange-ftp-file-size" function (:arguments ("file" "ascii-mode")) nil [142996 144125])
            ("ange-ftp-barf-or-query-if-file-exists" function (:arguments ("absname" "querystring" "interactive")) nil [144319 144659])
            ("ange-ftp-copy-file-internal" function (:arguments ("filename" "newname" "ok-if-already-exists" "keep-date" "msg" "cont" "nowait")) nil [146198 148966])
            ("ange-ftp-waiting-flag" variable nil nil [148968 149002])
            ("ange-ftp-cf1" function (:arguments ("result" "line" "filename" "newname" "binary" "msg" "f-parsed" "f-host" "f-user" "_f-name" "f-abbr" "t-parsed" "t-host" "t-user" "t-name" "t-abbr" "temp1" "temp2" "cont" "nowait")) nil [149037 151147])
            ("ange-ftp-cf2" function (:arguments ("result" "line" "newname" "t-host" "t-user" "binary" "temp1" "temp2" "cont")) nil [151182 151928])
            ("ange-ftp-copy-file" function (:arguments ("filename" "newname" "ok-if-already-exists" "keep-date" "preserve-uid-gid" "_preserve-selinux-context")) nil [151930 152315])
            ("ange-ftp-copy-files-async" function (:arguments ("okay-p" "line" "verbose-p" "files")) nil [152317 153419])
            ("ange-ftp-rename-remote-to-remote" function (:arguments ("filename" "newname" "f-parsed" "t-parsed")) nil [153584 154648])
            ("ange-ftp-rename-local-to-remote" function (:arguments ("filename" "newname")) nil [154650 155056])
            ("ange-ftp-rename-remote-to-local" function (:arguments ("filename" "newname")) nil [155058 155464])
            ("ange-ftp-rename-file" function (:arguments ("filename" "newname" "ok-if-already-exists")) nil [155466 156309])
            ("ange-ftp-file-entry-not-ignored-p" function (:arguments ("symname" "val")) nil [156778 157165])
            ("ange-ftp-root-dir-p" function (:arguments ("dir")) nil [157167 157434])
            ("ange-ftp-ignore-errors-if-non-essential" function (:arguments ("body")) nil [157436 157571])
            ("ange-ftp-file-name-all-completions" function (:arguments ("file" "dir")) nil [157573 158764])
            ("ange-ftp-file-name-completion" function (:arguments ("file" "dir" "predicate")) nil [158766 160068])
            ("ange-ftp-file-name-completion-1" function (:arguments ("file" "tbl" "dir" "predicate")) nil [160071 160501])
            ("defalias" code nil nil [160801 160854])
            ("ange-ftp-reread-dir" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [160871 161527])
            ("ange-ftp-make-directory" function (:arguments ("dir" "parents")) nil [161530 162942])
            ("ange-ftp-delete-directory" function (:arguments ("dir" "recursive")) nil [162944 164529])
            ("ange-ftp-file-local-copy" function (:arguments ("file")) nil [164583 164890])
            ("ange-ftp-file-remote-p" function (:arguments ("file" "identification" "connected")) nil [164892 165502])
            ("ange-ftp-load" function (:arguments ("file" "noerror" "nomessage" "nosuffix")) nil [165504 166301])
            ("ange-ftp-unhandled-file-name-directory" function (:arguments ("_filename")) nil [166373 166437])
            ("ange-ftp-make-compressed-filename-alist" variable nil nil [166602 167093])
            ("declare-function" code nil nil [167095 167152])
            ("ange-ftp-dired-compress-file" function (:arguments ("name")) nil [167154 167763])
            ("ange-ftp-compress" function (:arguments ("file" "nfile")) nil [167831 168848])
            ("ange-ftp-uncompress" function (:arguments ("file" "nfile")) nil [168918 170095])
            ("ange-ftp-find-backup-file-name" function (:arguments ("fn")) nil [170097 170320])
            ("ange-ftp-hook-function" function (:arguments ("operation" "args")) nil [170425 170756])
            ("add-hook" code nil nil [172251 172303])
            ("put" code nil nil [172372 172438])
            ("put" code nil nil [172439 172511])
            ("put" code nil nil [172512 172584])
            ("put" code nil nil [172585 172651])
            ("put" code nil nil [172652 172712])
            ("put" code nil nil [172713 172769])
            ("put" code nil nil [172770 172830])
            ("put" code nil nil [172831 172899])
            ("put" code nil nil [172900 172958])
            ("put" code nil nil [172959 173052])
            ("put" code nil nil [173053 173113])
            ("put" code nil nil [173114 173172])
            ("put" code nil nil [173173 173231])
            ("put" code nil nil [173232 173294])
            ("put" code nil nil [173295 173351])
            ("put" code nil nil [173352 173402])
            ("put" code nil nil [173403 173490])
            ("put" code nil nil [173491 173545])
            ("put" code nil nil [173546 173598])
            ("put" code nil nil [173599 173645])
            ("put" code nil nil [173646 173696])
            ("put" code nil nil [173697 173755])
            ("put" code nil nil [173756 173828])
            ("put" code nil nil [173829 173907])
            ("put" code nil nil [173908 173976])
            ("put" code nil nil [173977 174037])
            ("put" code nil nil [174038 174096])
            ("put" code nil nil [174097 174151])
            ("put" code nil nil [174152 174243])
            ("put" code nil nil [174244 174318])
            ("put" code nil nil [174319 174373])
            ("put" code nil nil [174374 174440])
            ("put" code nil nil [174441 174477])
            ("put" code nil nil [174478 174548])
            ("put" code nil nil [174549 174605])
            ("put" code nil nil [174693 174733])
            ("put" code nil nil [174918 174957])
            ("put" code nil nil [175056 175092])
            ("put" code nil nil [175208 175260])
            ("put" code nil nil [175261 175304])
            ("put" code nil nil [175305 175359])
            ("ange-ftp-run-real-handler-orig" function (:arguments ("operation" "args")) nil [175451 175784])
            ("defalias" code nil nil [175786 175926])
            ("ange-ftp-real-file-name-directory" function (:arguments ("args")) nil [175928 176038])
            ("ange-ftp-real-file-name-nondirectory" function (:arguments ("args")) nil [176039 176155])
            ("ange-ftp-real-file-name-as-directory" function (:arguments ("args")) nil [176156 176272])
            ("ange-ftp-real-directory-file-name" function (:arguments ("args")) nil [176273 176383])
            ("ange-ftp-real-expand-file-name" function (:arguments ("args")) nil [176384 176488])
            ("ange-ftp-real-make-directory" function (:arguments ("args")) nil [176489 176589])
            ("ange-ftp-real-delete-directory" function (:arguments ("args")) nil [176590 176694])
            ("ange-ftp-real-insert-file-contents" function (:arguments ("args")) nil [176695 176807])
            ("ange-ftp-real-directory-files" function (:arguments ("args")) nil [176808 176910])
            ("ange-ftp-real-directory-files-and-attributes" function (:arguments ("args")) nil [176911 177043])
            ("ange-ftp-real-file-directory-p" function (:arguments ("args")) nil [177044 177148])
            ("ange-ftp-real-file-writable-p" function (:arguments ("args")) nil [177149 177251])
            ("ange-ftp-real-file-readable-p" function (:arguments ("args")) nil [177252 177354])
            ("ange-ftp-real-file-executable-p" function (:arguments ("args")) nil [177355 177461])
            ("ange-ftp-real-file-symlink-p" function (:arguments ("args")) nil [177462 177562])
            ("ange-ftp-real-delete-file" function (:arguments ("args")) nil [177563 177657])
            ("ange-ftp-real-verify-visited-file-modtime" function (:arguments ("args")) nil [177658 177784])
            ("ange-ftp-real-file-exists-p" function (:arguments ("args")) nil [177785 177883])
            ("ange-ftp-real-write-region" function (:arguments ("args")) nil [177884 177980])
            ("ange-ftp-real-backup-buffer" function (:arguments ("args")) nil [177981 178079])
            ("ange-ftp-real-copy-file" function (:arguments ("args")) nil [178080 178170])
            ("ange-ftp-real-rename-file" function (:arguments ("args")) nil [178171 178265])
            ("ange-ftp-real-file-attributes" function (:arguments ("args")) nil [178266 178368])
            ("ange-ftp-real-file-newer-than-file-p" function (:arguments ("args")) nil [178369 178485])
            ("ange-ftp-real-file-name-all-completions" function (:arguments ("args")) nil [178486 178608])
            ("ange-ftp-real-file-name-completion" function (:arguments ("args")) nil [178609 178721])
            ("ange-ftp-real-insert-directory" function (:arguments ("args")) nil [178722 178826])
            ("ange-ftp-real-file-name-sans-versions" function (:arguments ("args")) nil [178827 178945])
            ("ange-ftp-real-shell-command" function (:arguments ("args")) nil [178946 179044])
            ("ange-ftp-real-load" function (:arguments ("args")) nil [179045 179125])
            ("ange-ftp-real-find-backup-file-name" function (:arguments ("args")) nil [179126 179240])
            ("ange-ftp-insert-directory" function (:arguments ("file" "switches" "wildcard" "full")) nil [179937 182203])
            ("ange-ftp-dired-uncache" function (:arguments ("dir")) nil [182205 182331])
            ("ange-ftp-sans-version-alist" variable nil nil [182333 182450])
            ("ange-ftp-file-name-sans-versions" function (:arguments ("file" "keep-backup-version")) nil [182452 182869])
            ("ange-ftp-shell-command" function (:arguments ("command" "output-buffer" "error-buffer")) nil [182913 183907])
            ("ange-ftp-process-file" function (:arguments ("program" "infile" "buffer" "display" "arguments")) nil [183951 184864])
            ("ange-ftp-call-chmod" function (:arguments ("args")) nil [184952 185998])
            ("ange-ftp-set-file-modes" function (:arguments ("filename" "mode")) nil [186000 186106])
            ("ange-ftp-fix-name-for-vms" function (:arguments ("name" "reverse")) nil [198204 199318])
            ("or" code nil nil [199475 199636])
            ("or" code nil nil [199638 199755])
            ("ange-ftp-fix-dir-name-for-vms" function (:arguments ("dir-name")) nil [200232 200668])
            ("or" code nil nil [200670 200847])
            ("ange-ftp-vms-host-regexp" variable nil nil [200849 200886])
            ("ange-ftp-vms-host" function (:arguments ("host")) nil [200930 201049])
            ("ange-ftp-vms-filename-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\([_A-Za-z0-9$]?\\|[_A-Za-z0-9$][-_A-Za-z0-9$]*\\)\\." "[-_A-Za-z0-9$]*;+[0-9]*\\)"))
                nil [201186 201607])
            ("ange-ftp-parse-vms-filename" function nil nil [202006 202143])
            ("ange-ftp-parse-vms-listing" function nil nil [202265 203097])
            ("add-to-list" code nil nil [203099 203186])
            ("ange-ftp-vms-delete-file-entry" function (:arguments ("name" "dir-p")) nil [203389 204341])
            ("or" code nil nil [204343 204521])
            ("ange-ftp-vms-add-file-entry" function (:arguments ("name" "dir-p")) nil [204523 205420])
            ("or" code nil nil [205422 205588])
            ("ange-ftp-add-vms-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [205591 206059])
            ("ange-ftp-vms-file-name-as-directory" function (:arguments ("name")) nil [206062 206299])
            ("or" code nil nil [206301 206499])
            ("ange-ftp-vms-make-compressed-filename" function (:arguments ("name" "_reverse")) nil [210688 211177])
            ("or" code nil nil [211179 211385])
            ("ange-ftp-vms-sans-version" function (:arguments ("name" "_args")) nil [212200 212365])
            ("or" code nil nil [212367 212525])
            ("ange-ftp-fix-name-for-mts" function (:arguments ("name" "reverse")) nil [218562 219093])
            ("or" code nil nil [219095 219256])
            ("ange-ftp-fix-dir-name-for-mts" function (:arguments ("dir-name")) nil [219376 219720])
            ("or" code nil nil [219749 219926])
            ("or" code nil nil [219928 220045])
            ("ange-ftp-mts-host-regexp" variable nil nil [220047 220084])
            ("ange-ftp-mts-host" function (:arguments ("host")) nil [220128 220247])
            ("ange-ftp-parse-mts-listing" function nil nil [220323 220779])
            ("add-to-list" code nil nil [220781 220868])
            ("ange-ftp-add-mts-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [220870 221338])
            ("ange-ftp-fix-name-for-cms" function (:arguments ("name" "reverse")) nil [224358 225766])
            ("or" code nil nil [225768 225929])
            ("or" code nil nil [225931 226048])
            ("ange-ftp-fix-dir-name-for-cms" function (:arguments ("dir-name")) nil [226118 227136])
            ("or" code nil nil [227138 227315])
            ("ange-ftp-cms-host-regexp" variable nil nil [227317 227426])
            ("ange-ftp-cms-host" function (:arguments ("host")) nil [227470 227589])
            ("ange-ftp-add-cms-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [227591 228048])
            ("ange-ftp-parse-cms-listing" function nil nil [228050 229331])
            ("add-to-list" code nil nil [229333 229420])
            ("ange-ftp-cms-make-compressed-filename" function (:arguments ("name" "_reverse")) nil [232045 232222])
            ("or" code nil nil [232224 232430])
            ("ange-ftp-bs2000-short-filename-regexp" variable
               (:constant-flag t
                :default-value "[-A-Z0-9$#@.]*[A-Z][-A-Z0-9$#@.]*")
                nil [233266 233420])
            ("ange-ftp-bs2000-fix-name-regexp-reverse" variable
               (:constant-flag t
                :default-value (concat "^\\(" ange-ftp-bs2000-filename-pubset-regexp "\\)?" "\\(" ange-ftp-bs2000-filename-username-regexp "\\)?" "\\(" ange-ftp-bs2000-short-filename-regexp "\\)?"))
                nil [233422 233713])
            ("ange-ftp-bs2000-fix-name-regexp" variable
               (:constant-flag t
                :default-value (concat "/?\\(" ange-ftp-bs2000-filename-pubset-regexp "/\\)?" "\\(\\$[A-Z0-9]*/\\)?" "\\(" ange-ftp-bs2000-short-filename-regexp "\\)?"))
                nil [233715 233969])
            ("ange-ftp-bs2000-special-prefix" variable (:default-value "X") nil [233971 234110])
            ("ange-ftp-fix-name-for-bs2000" function (:arguments ("name" "reverse")) nil [234211 236067])
            ("or" code nil nil [236069 236239])
            ("ange-ftp-fix-dir-name-for-bs2000" function (:arguments ("dir-name")) nil [236365 236540])
            ("or" code nil nil [236542 236728])
            ("or" code nil nil [236730 236853])
            ("ange-ftp-bs2000-host-regexp" variable nil nil [236855 236895])
            ("ange-ftp-bs2000-posix-host-regexp" variable nil nil [236896 236942])
            ("ange-ftp-bs2000-host" function (:arguments ("host")) nil [236989 237117])
            ("ange-ftp-bs2000-posix-host" function (:arguments ("host")) nil [237184 237330])
            ("ange-ftp-add-bs2000-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [237332 237818])
            ("ange-ftp-add-bs2000-posix-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [237820 238488])
            ("ange-ftp-bs2000-filename-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(" ange-ftp-bs2000-filename-prefix-regexp "\\)?" "\\(" ange-ftp-bs2000-short-filename-regexp "\\)"))
                nil [238490 238713])
            ("ange-ftp-bs2000-additional-pubsets" variable nil nil [238715 238866])
            ("ange-ftp-parse-bs2000-filename" function nil nil [239125 239254])
            ("ange-ftp-parse-bs2000-listing" function nil nil [239381 240101])
            ("add-to-list" code nil nil [240103 240196])
            ("ange-ftp-bs2000-cd-to-posix" function nil nil [240198 241041])
            ("ange-ftp" package nil nil [241430 241449]))          
      :file "ange-ftp.el"
      :pointmax 241477
      :fsize 241476
      :lastmodtime '(21788 61018 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "net-utils.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("net-utils" customgroup (:user-visible-flag t) nil [1676 1787])
            ("traceroute-program" variable (:default-value (if (eq system-type (quote windows-nt)) "tracert" "traceroute")) nil [1789 1977])
            ("traceroute-program-options" variable nil nil [1979 2107])
            ("ping-program" variable (:default-value "ping") nil [2109 2229])
            ("ping-program-options" variable (:default-value (and (memq system-type (quote (gnu/linux irix))) (list "-c" "4"))) nil [2343 2593])
            ("define-obsolete-variable-alias" code nil nil [2595 2670])
            ("ifconfig-program" variable (:default-value (if (eq system-type (quote windows-nt)) "ipconfig" "ifconfig")) nil [2672 2861])
            ("define-obsolete-variable-alias" code nil nil [2863 2956])
            ("ifconfig-program-options" variable (:default-value (list (if (eq system-type (quote windows-nt)) "/all" "-a"))) nil [2958 3143])
            ("iwconfig-program" variable (:default-value "iwconfig") nil [3145 3303])
            ("iwconfig-program-options" variable nil nil [3305 3442])
            ("netstat-program" variable (:default-value "netstat") nil [3444 3559])
            ("netstat-program-options" variable (:default-value (list "-a")) nil [3561 3693])
            ("arp-program" variable (:default-value "arp") nil [3695 3816])
            ("arp-program-options" variable (:default-value (list "-a")) nil [3818 3942])
            ("route-program" variable (:default-value (if (eq system-type (quote windows-nt)) "route" "netstat")) nil [3944 4107])
            ("route-program-options" variable (:default-value (if (eq system-type (quote windows-nt)) (list "print") (list "-r"))) nil [4109 4296])
            ("nslookup-program" variable (:default-value "nslookup") nil [4298 4426])
            ("nslookup-program-options" variable nil nil [4428 4552])
            ("nslookup-prompt-regexp" variable (:default-value "^> ") nil [4554 4755])
            ("dig-program" variable (:default-value "dig") nil [4757 4861])
            ("ftp-program" variable (:default-value "ftp") nil [4863 4969])
            ("ftp-program-options" variable nil nil [4971 5085])
            ("ftp-prompt-regexp" variable (:default-value "^ftp>") nil [5087 5295])
            ("smbclient-program" variable (:default-value "smbclient") nil [5297 5398])
            ("smbclient-program-options" variable nil nil [5400 5526])
            ("smbclient-prompt-regexp" variable (:default-value "^smb: >") nil [5528 5751])
            ("dns-lookup-program" variable (:default-value "host") nil [5753 5879])
            ("dns-lookup-program-options" variable nil nil [5881 6009])
            ("network-connection-service" variable nil nil [6033 6072])
            ("network-connection-host" variable nil nil [6073 6112])
            ("nslookup-font-lock-keywords" variable (:default-value (list (list "^[A-Za-z0-9 _]+:" 0 (quote font-lock-type-face)) (list "\\<\\(SOA\\|NS\\|MX\\|A\\|CNAME\\)\\>" 1 (quote font-lock-keyword-face)) (list (mapconcat (quote identity) (make-list 4 "[0-9]+") "\\.") 0 (quote font-lock-variable-name-face)) (list (let ((host-expression "[-A-Za-z0-9]+")) (concat (mapconcat (quote identity) (make-list 2 host-expression) "\\.") "\\(\\." host-expression "\\)*")) 0 (quote font-lock-variable-name-face)))) nil [6257 6896])
            ("net-utils-font-lock-keywords" variable (:default-value (list (list (mapconcat (quote identity) (make-list 4 "[0-9]+") "\\.") 0 (quote font-lock-variable-name-face)) (list (concat "\\( \\([[:xdigit:]]+\\(:\\|::\\)\\)+[[:xdigit:]]+\\)" "\\|" "\\(::[[:xdigit:]]+\\)") 0 (quote font-lock-variable-name-face)) (list (let ((host-expression "[-A-Za-z0-9]+")) (concat (mapconcat (quote identity) (make-list 2 host-expression) "\\.") "\\(\\." host-expression "\\)*")) 0 (quote font-lock-variable-name-face)))) nil [7055 7689])
            ("define-derived-mode" code nil nil [7691 7977])
            ("net-utils-machine-at-point" function nil nil [8241 8533])
            ("net-utils-url-at-point" function nil nil [8535 8888])
            ("net-utils-remove-ctrl-m-filter" function (:arguments ("process" "output-string")) nil [8890 9461])
            ("net-utils-run-program" function (:arguments ("name" "header" "program" "args")) nil [9463 10170])
            ("net-utils--revert-cmd" variable nil nil [10386 10420])
            ("net-utils-run-simple" function (:arguments ("buffer" "program-name" "args" "nodisplay")) nil [10422 11579])
            ("net-utils--revert-function" function (:arguments ("ignore-auto" "noconfirm")) nil [11581 12018])
            ("ifconfig" function (:user-visible-flag t) nil [12035 12227])
            ("defalias" code nil nil [12229 12259])
            ("iwconfig" function (:user-visible-flag t) nil [12276 12468])
            ("netstat" function (:user-visible-flag t) nil [12485 12672])
            ("arp" function (:user-visible-flag t) nil [12689 12856])
            ("route" function (:user-visible-flag t) nil [12873 13050])
            ("traceroute" function
               (:user-visible-flag t
                :arguments ("target"))
                nil [13232 13556])
            ("ping" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [13573 14048])
            ("nslookup-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [14329 14790])
            ("nslookup" function (:user-visible-flag t) nil [14807 14949])
            ("comint-prompt-regexp" variable nil nil [14951 14980])
            ("comint-input-autoexpand" variable nil nil [14981 15013])
            ("comint-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15015 15053])
            ("nslookup-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote completion-at-point)) map)) nil [15055 15173])
            ("define-derived-mode" code nil nil [15229 15522])
            ("dns-lookup-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [15539 16055])
            ("ffap-string-at-point" function (:prototype-flag t) nil [16057 16096])
            ("run-dig" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [16113 16453])
            ("comint-exec" function (:prototype-flag t) nil [16455 16487])
            ("ftp" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [16559 16977])
            ("ftp-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote completion-at-point)) map)) nil [16979 17119])
            ("define-derived-mode" code nil nil [17121 17860])
            ("smbclient" function
               (:user-visible-flag t
                :arguments ("host" "service"))
                nil [17862 18482])
            ("smbclient-list-shares" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [18484 18879])
            ("define-derived-mode" code nil nil [18881 19644])
            ("network-connection-service-alist" variable (:default-value (list (cons (quote echo) 7) (cons (quote active-users) 11) (cons (quote daytime) 13) (cons (quote chargen) 19) (cons (quote ftp) 21) (cons (quote telnet) 23) (cons (quote smtp) 25) (cons (quote time) 37) (cons (quote whois) 43) (cons (quote gopher) 70) (cons (quote finger) 79) (cons (quote www) 80) (cons (quote pop2) 109) (cons (quote pop3) 110) (cons (quote sun-rpc) 111) (cons (quote nntp) 119) (cons (quote ntp) 123) (cons (quote netbios-name) 137) (cons (quote netbios-data) 139) (cons (quote irc) 194) (cons (quote https) 443) (cons (quote rlogin) 513))) nil [19871 20546])
            ("run-network-program" function (:arguments ("process-name" "host" "port" "initial-string")) nil [20569 21186])
            ("finger-X.500-host-regexps" variable nil nil [21331 21684])
            ("finger" function
               (:user-visible-flag t
                :arguments ("user" "host"))
                nil [21720 22807])
            ("whois-server-name" variable (:default-value "rs.internic.net") nil [22809 22938])
            ("whois-server-list" variable (:default-value (quote (("whois.arin.net") ("rs.internic.net") ("whois.publicinterestregistry.net") ("whois.abuse.net") ("whois.apnic.net") ("nic.ddn.mil") ("whois.nic.mil") ("whois.nic.gov") ("whois.ripe.net")))) nil [22940 23368])
            ("whois-server-tld" variable (:default-value (quote (("rs.internic.net" . "com") ("whois.publicinterestregistry.net" . "org") ("whois.ripe.net" . "be") ("whois.ripe.net" . "de") ("whois.ripe.net" . "dk") ("whois.ripe.net" . "it") ("whois.ripe.net" . "fi") ("whois.ripe.net" . "fr") ("whois.ripe.net" . "uk") ("whois.apnic.net" . "au") ("whois.apnic.net" . "ch") ("whois.apnic.net" . "hk") ("whois.apnic.net" . "jp") ("whois.nic.gov" . "gov") ("whois.nic.mil" . "mil")))) nil [23545 24161])
            ("whois-guess-server" variable (:default-value t) nil [24163 24429])
            ("whois-get-tld" function (:arguments ("host")) nil [24431 24747])
            ("whois" function
               (:user-visible-flag t
                :arguments ("arg" "search-string"))
                nil [24782 25543])
            ("whois-reverse-lookup-server" variable (:default-value "whois.arin.net") nil [25545 25685])
            ("whois-reverse-lookup" function nil nil [25702 25839])
            ("define-derived-mode" code nil nil [26049 26197])
            ("network-connection-mode-setup" function (:arguments ("host" "service")) nil [26199 26434])
            ("network-connection-to-service" function
               (:user-visible-flag t
                :arguments ("host" "service"))
                nil [26451 26911])
            ("network-connection" function
               (:user-visible-flag t
                :arguments ("host" "port"))
                nil [26928 27108])
            ("network-service-connection" function (:arguments ("host" "service")) nil [27110 27618])
            ("comint-input-ring" variable nil nil [27620 27646])
            ("network-connection-reconnect" function (:user-visible-flag t) nil [27648 28351])
            ("net-utils" package nil nil [28353 28373]))          
      :file "net-utils.el"
      :pointmax 28402
      :fsize 28401
      :lastmodtime '(21710 25077 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!24.5!lisp!net!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

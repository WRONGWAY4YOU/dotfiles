;; Object lexer/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lexer/"
  :tables
  (list
    (semanticdb-table "token.h"
      :major-mode 'c-mode
      :tags 
        '( ("TOKEN_H" variable (:constant-flag t) nil [216 223])
            ("stdio.h" include (:system-flag t) nil [225 243])
            ("lib/types.h" include nil nil [245 267])
            ("lib/macros.h" include nil nil [268 291])
            ("lib/xvec.h" include nil nil [292 313])
            ("FIRST_RESERVED_TOK" variable (:constant-flag t) nil [323 341])
            ("tok_is_reserved" variable (:constant-flag t) nil [352 367])
            ("tok_is_assign_shorthand" variable (:constant-flag t) nil [415 438])
            ("tok_is_id" variable (:constant-flag t) nil [486 495])
            ("tok_is_paren" variable (:constant-flag t) nil [594 606])
            ("tok_can_be_in_compound_expr" variable (:constant-flag t) nil [645 672])
            ("tok_can_start_compound_expr" variable (:constant-flag t) nil [726 753])
            ("tok_is_unop" variable (:constant-flag t) nil [807 818])
            ("tok_is_binop" variable (:constant-flag t) nil [856 868])
            ("tt_is_op" variable (:constant-flag t) nil [907 915])
            ("tok_is_op" variable (:constant-flag t) nil [974 983])
            ("tok_left_assoc" variable (:constant-flag t) nil [1041 1055])
            ("tok_preced" variable (:constant-flag t) nil [1096 1106])
            ("tt2str" variable (:constant-flag t) nil [1143 1149])
            ("tok2str" variable (:constant-flag t) nil [1180 1187])
            ("print_tok" variable (:constant-flag t) nil [1221 1230])
            ("tok_assert_type" variable (:constant-flag t) nil [1299 1314])
            ("TokenType" type
               (:members 
                  ( ("TOK_INVALID" variable
                       (:constant-flag t
                        :default-value (1788 1806)
                        :type "int")
                        (reparse-symbol enumsubparts) [1894 1926])
                    ("TOK_NEWLINE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1954 1966])
                    ("TOK_SEMI" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1967 1976])
                    ("TOK_COLON" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1981 1991])
                    ("TOK_COMMA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1992 2002])
                    ("TOK_LBRACKET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2007 2020])
                    ("TOK_RBRACKET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2021 2034])
                    ("TOK_LPAREN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2039 2050])
                    ("TOK_RPAREN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2051 2062])
                    ("TOK_LBRACE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2067 2078])
                    ("TOK_RBRACE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2079 2090])
                    ("TOK_UNARY_PLUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2122 2137])
                    ("TOK_UNARY_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2138 2154])
                    ("TOK_LOGICAL_NOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2159 2175])
                    ("TOK_BITWISE_NOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2176 2192])
                    ("TOK_INCR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2197 2206])
                    ("TOK_DECR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2207 2216])
                    ("TOK_BINARY_PLUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2249 2265])
                    ("TOK_BINARY_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2266 2283])
                    ("TOK_STAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2284 2293])
                    ("TOK_SLASH" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2294 2304])
                    ("TOK_MODULUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2309 2321])
                    ("TOK_POW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2322 2330])
                    ("TOK_EQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2367 2374])
                    ("TOK_NEQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2375 2383])
                    ("TOK_LT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2388 2395])
                    ("TOK_GT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2396 2403])
                    ("TOK_LTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2404 2412])
                    ("TOK_GTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2413 2421])
                    ("TOK_LOGICAL_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2455 2471])
                    ("TOK_LOGICAL_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2472 2487])
                    ("TOK_BITWISE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2521 2537])
                    ("TOK_BITWISE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2538 2553])
                    ("TOK_BITWISE_XOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2558 2574])
                    ("TOK_BITWISE_LS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2579 2594])
                    ("TOK_BITWISE_RS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2595 2610])
                    ("TOK_ASSIGN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2643 2654])
                    ("TOK_ASSIGN_PLUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2659 2675])
                    ("TOK_ASSIGN_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2676 2693])
                    ("TOK_ASSIGN_STAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2694 2710])
                    ("TOK_ASSIGN_SLASH" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2711 2728])
                    ("TOK_ASSIGN_MODULUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2733 2752])
                    ("TOK_ASSIGN_POW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2753 2768])
                    ("TOK_ASSIGN_BITWISE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2773 2796])
                    ("TOK_ASSIGN_BITWISE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2797 2819])
                    ("TOK_ASSIGN_BITWISE_XOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2824 2847])
                    ("TOK_ASSIGN_BITWISE_LS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2852 2874])
                    ("TOK_ASSIGN_BITWISE_RS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2875 2897])
                    ("TOK_KEYWORD_VAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2922 2938])
                    ("TOK_KEYWORD_IF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2939 2954])
                    ("TOK_KEYWORD_ELIF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2959 2976])
                    ("TOK_KEYWORD_ELSE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2977 2994])
                    ("TOK_KEYWORD_WHILE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2999 3017])
                    ("TOK_KEYWORD_FOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3018 3034])
                    ("TOK_KEYWORD_FUNC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3039 3056])
                    ("TOK_KEYWORD_TRUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3061 3078])
                    ("TOK_KEYWORD_FALSE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3079 3097])
                    ("TOK_KEYWORD_RETURN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3102 3121])
                    ("TOK_KEYWORD_IMPORT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3122 3141])
                    ("TOK_INUMLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3169 3181])
                    ("TOK_DNUMLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3182 3194])
                    ("TOK_STRLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3199 3210])
                    ("TOK_ID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3211 3218])
                    ("TOK_COUNT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3223 3234]))                  
                :type "enum")
                nil [1855 3235])
            ("LAST_RESERVED_TOK" variable (:constant-flag t) nil [3245 3262])
            ("RESERVED_TOKENS_COUNT" variable (:constant-flag t) nil [3290 3311])
            ("Token" type
               (:members 
                  ( ("val" variable
                       (:pointer 1
                        :type ("GShObject" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [3375 3397])
                    ("type" variable (:type ("TokenType" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [3402 3422]))                  
                :type "struct")
                nil [3356 3425])
            ("RESERVED_TOKENS" variable
               (:dereference 1
                :typemodifiers ("extern")
                :constant-flag t
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3501 3545])
            ("TOK_STR" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("extern")
                :type "char")
                nil [3643 3681])
            ("tok_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3763 3789]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3741 3790])
            ("tok_strlit_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3820 3842]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3791 3843])
            ("tok_inumlit_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3874 3896]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3844 3897])
            ("tok_dnumlit_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3928 3950]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3898 3951])
            ("tok_id_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3977 3999]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3952 4000])
            ("tt_is_assign_shorthand" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4073 4099]))                  
                :type "bool")
                nil [4045 4100])
            ("ch_can_be_start_of_numlit" function
               (:prototype-flag t
                :arguments 
                  ( ("ch" variable (:type "char") (reparse-symbol arg-sub-list) [4132 4140]))                  
                :type "bool")
                nil [4101 4141])
            ("tok_xvec_deinit" function
               (:prototype-flag t
                :arguments 
                  ( ("toks" variable
                       (:pointer 1
                        :type ("XVector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4164 4185]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [4142 4186])
            ("tok_xvec_delete" function
               (:prototype-flag t
                :arguments 
                  ( ("toks" variable
                       (:pointer 1
                        :type ("XVector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4209 4230]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [4187 4231])
            ("tt_can_be_in_compound_expr" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4264 4290]))                  
                :type "bool")
                nil [4232 4291])
            ("tt_can_start_compound_expr" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4324 4350]))                  
                :type "bool")
                nil [4292 4351])
            ("tt_is_id" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4366 4392]))                  
                :type "bool")
                nil [4352 4393])
            ("tt_is_cmd_separator" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4419 4445]))                  
                :type "bool")
                nil [4394 4446])
            ("tt_is_paren" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4464 4490]))                  
                :type "bool")
                nil [4447 4491])
            ("tt_is_unop" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4508 4534]))                  
                :type "bool")
                nil [4492 4535])
            ("tt_is_binop" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4553 4579]))                  
                :type "bool")
                nil [4536 4580])
            ("tt_left_assoc" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4600 4626]))                  
                :type "bool")
                nil [4581 4627])
            ("tt_preced" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4644 4670]))                  
                :type ("uint8" type (:type "class") nil nil))
                nil [4628 4671]))          
      :file "token.h"
      :pointmax 4694
      :fsize 4693
      :lastmodtime '(22655 42601 963059 931000)
      :unmatched-syntax nil
      :lexical-table 
        '(("tok_is_op" (spp-arg-list ("tok") 967 . 972) . ((semantic-list "(tok_is_unop((tok)) || tok_is_binop((tok)))" 973 . 1016)))
          ("tt2str" (spp-arg-list ("type") 1133 . 1139) . ((symbol "TOK_STR" 1140 . 1147) (semantic-list "[(type)]" 1147 . 1155)))
          ("tok_is_assign_shorthand" (spp-arg-list ("tok") 418 . 423) . ((symbol "tt_is_assign_shorthand" 424 . 446) (semantic-list "(tok->type)" 446 . 457)))
          ("TOKEN_H")
          ("tok_is_reserved" (spp-arg-list ("tok") 347 . 352) . ((semantic-list "(tok->type <= TOK_KEYWORD_IMPORT)" 353 . 386)))
          ("tok_is_unop" (spp-arg-list ("tok") 802 . 807) . ((symbol "tt_is_unop" 808 . 818) (semantic-list "((tok)->type)" 818 . 831)))
          ("print_tok" (spp-arg-list ("tok") 1214 . 1219) . ((symbol "printf" 1220 . 1226) (semantic-list "(\"%s\\n\", tt2str((tok)->type))" 1226 . 1255)))
          ("tok_assert_type" (spp-arg-list ("type") 1318 . 1324) . ((symbol "DEBUG_ASSERT" 1325 . 1337) (semantic-list "(__check(type), \"not-proper token type\")" 1337 . 1377)))
          ("tok_can_be_in_compound_expr" (spp-arg-list ("tok") 656 . 661) . ((symbol "tt_can_be_in_compound_expr" 662 . 688) (semantic-list "((tok)->type)" 688 . 701)))
          ("tok2str" (spp-arg-list ("tok") 1171 . 1176) . ((symbol "tt2str" 1177 . 1183) (semantic-list "((tok)->type)" 1183 . 1196)))
          ("RESERVED_TOKENS_COUNT" . 
              ((symbol "LAST_RESERVED_TOK" 2676 . 2693) (punctuation "-" 2694 . 2695) (symbol "FIRST_RESERVED_TOK" 2696 . 2714)))
          ("tt_is_op" (spp-arg-list ("type") 899 . 905) . ((semantic-list "(tt_is_unop((type)) || tt_is_binop((type)))" 906 . 949)))
          ("tok_is_id" (spp-arg-list ("tok") 475 . 480) . ((symbol "tt_is_id" 481 . 489) (semantic-list "((tok)->type)" 489 . 502)))
          ("tok_can_start_compound_expr" (spp-arg-list ("tok") 737 . 742) . ((symbol "tt_can_start_compound_expr" 743 . 769) (semantic-list "((tok)->type)" 769 . 782)))
          ("LAST_RESERVED_TOK" . ((symbol "TOK_KEYWORD_IMPORT" 2627 . 2645)))
          ("FIRST_RESERVED_TOK" . ((number "0" 322 . 323)))
          ("tok_is_paren" (spp-arg-list ("tok") 590 . 595) . ((symbol "tt_is_paren" 596 . 607) (semantic-list "((tok)->type)" 607 . 620)))
          ("tok_is_binop" (spp-arg-list ("tok") 852 . 857) . ((symbol "tt_is_binop" 858 . 869) (semantic-list "((tok)->type)" 869 . 882)))
          ("tok_left_assoc" (spp-arg-list ("tok") 1039 . 1044) . ((symbol "tt_left_assoc" 1045 . 1058) (semantic-list "((tok)->type)" 1058 . 1071)))
          ("tok_is_cmd_separator" (spp-arg-list ("tok") 531 . 536) . ((symbol "tt_is_cmd_separator" 537 . 556) (semantic-list "((tok)->type)" 556 . 569)))
          ("tok_preced" (spp-arg-list ("tok") 1090 . 1095) . ((symbol "tt_preced" 1096 . 1105) (semantic-list "((tok)->type)" 1105 . 1118)))
          ("TOK_ASSERT_TYPE" (spp-arg-list ("type") 1318 . 1324) . ((symbol "DEBUG_ASSERT" 1325 . 1337) (semantic-list "(__check(type), \"not-proper token type\")" 1337 . 1377)))
          )
)
    (semanticdb-table "token.c"
      :major-mode 'c-mode
      :tags 
        '( ("interpreter/lexer/token.h" include nil nil [165 201])
            ("lib/types.h" include nil nil [203 225])
            ("lib/macros.h" include nil nil [226 249])
            ("lib/xmalloc.h" include nil nil [250 274])
            ("interpreter/object/str.h" include nil nil [275 310])
            ("RESERVED_TOKENS" variable
               (:dereference 1
                :constant-flag t
                :default-value "{
    /* Special */
    {NULL, TOK_INVALID},

    /* Separators */
    {NULL, TOK_NEWLINE}, {NULL, TOK_SEMI},
    {NULL, TOK_COLON}, {NULL, TOK_COMMA},
    {NULL, TOK_LBRACKET}, {NULL, TOK_RBRACKET},
    {NULL, TOK_LPAREN}, {NULL, TOK_RPAREN},
    {NULL, TOK_LBRACE}, {NULL, TOK_RBRACE},

    /* Unary operators */
    {NULL, TOK_UNARY_PLUS}, {NULL, TOK_UNARY_MINUS},
    {NULL, TOK_LOGICAL_NOT}, {NULL, TOK_BITWISE_NOT},
    {NULL, TOK_INCR}, {NULL, TOK_DECR},

    /* Binary operators */
    {NULL, TOK_BINARY_PLUS}, {NULL, TOK_BINARY_MINUS},
    {NULL, TOK_STAR}, {NULL, TOK_SLASH},
    {NULL, TOK_MODULUS}, {NULL, TOK_POW},
    {NULL, TOK_EQ}, {NULL, TOK_NEQ},
    {NULL, TOK_LT}, {NULL, TOK_GT},
    {NULL, TOK_LTE}, {NULL, TOK_GTE},
    {NULL, TOK_LOGICAL_AND}, {NULL, TOK_LOGICAL_OR},
    {NULL, TOK_BITWISE_AND}, {NULL, TOK_BITWISE_OR},
    {NULL, TOK_BITWISE_XOR},
    {NULL, TOK_BITWISE_LS}, {NULL, TOK_BITWISE_RS},
    {NULL, TOK_ASSIGN},
    {NULL, TOK_ASSIGN_PLUS}, {NULL, TOK_ASSIGN_MINUS},
    {NULL, TOK_ASSIGN_STAR}, {NULL, TOK_ASSIGN_SLASH},
    {NULL, TOK_ASSIGN_MODULUS}, {NULL, TOK_ASSIGN_POW},
    {NULL, TOK_ASSIGN_BITWISE_AND}, {NULL, TOK_ASSIGN_BITWISE_OR},
    {NULL, TOK_ASSIGN_BITWISE_XOR},
    {NULL, TOK_ASSIGN_BITWISE_LS}, {NULL, TOK_ASSIGN_BITWISE_RS},

    /* Keywords */
    {NULL, TOK_KEYWORD_VAR}, {NULL, TOK_KEYWORD_IF},
    {NULL, TOK_KEYWORD_ELIF}, {NULL, TOK_KEYWORD_ELSE},
    {NULL, TOK_KEYWORD_WHILE}, {NULL, TOK_KEYWORD_FOR},
    {NULL, TOK_KEYWORD_FUNC},
    {NULL, TOK_KEYWORD_TRUE}, {NULL, TOK_KEYWORD_FALSE},
    {NULL, TOK_KEYWORD_RETURN}, {NULL, TOK_KEYWORD_IMPORT}
}"
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [312 1969])
            ("TOK_STR" variable
               (:pointer 1
                :dereference 1
                :default-value "{
    /* Special */
    \"invalid token\",

    /* Separators */
    \"\\n\", \";\",
    \":\", \",\",
    \"[\", \"]\",
    \"(\", \")\",
    \"{\", \"}\",

    /* Unary operators */
    \"+\", \"-\",
    \"!\", \"~\",
    \"++\", \"--\",

    /* Binary operators */
    \"+\", \"-\", \"*\", \"/\",
    \"%\", \"**\",
    \"==\", \"!=\",
    \"<\", \">\", \"<=\", \">=\",
    \"&&\", \"||\",
    \"&\", \"|\",
    \"^\",
    \"<<\", \">>\",
    \"=\",
    \"+=\", \"-=\", \"*=\", \"/=\",
    \"%=\", \"**=\",
    \"&=\", \"|=\",
    \"^=\",
    \"<<=\", \">>=\",

    /* Keywords */
    \"var\", \"if\",
    \"elif\", \"else\",
    \"while\", \"for\",
    \"function\",
    \"true\", \"false\",
    \"return\", \"import\",

    /* Identifiers */
    \"integer number literal\", \"double number literal\",
    \"string literal\", \"identifier\"
}"
                :type "char")
                nil [1972 2725])
            ("tok_new" function
               (:pointer 1
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [2806 2832]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2784 2938])
            ("tok_strlit_new" function
               (:pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2969 2991]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2940 3092])
            ("tok_inumlit_new" function
               (:pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3124 3146]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3094 3248])
            ("tok_dnumlit_new" function
               (:pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3280 3302]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3250 3404])
            ("tok_id_new" function
               (:pointer 1
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3431 3453]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3406 3550])
            ("ch_can_be_start_of_numlit" function
               (:arguments 
                  ( ("ch" variable (:type "char") (reparse-symbol arg-sub-list) [3626 3634]))                  
                :type "bool")
                nil [3595 3699])
            ("tok_xvec_deinit" function
               (:arguments 
                  ( ("toks" variable
                       (:pointer 1
                        :type ("XVector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3723 3744]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [3701 3957])
            ("tok_xvec_delete" function
               (:arguments 
                  ( ("toks" variable
                       (:pointer 1
                        :type ("XVector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3981 4002]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [3959 4050])
            ("tt_can_be_in_compound_expr" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4089 4115]))                  
                :type "bool")
                nil [4052 4185])
            ("tt_can_start_compound_expr" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4224 4250]))                  
                :type "bool")
                nil [4187 4332])
            ("tt_is_assign_shorthand" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4362 4388]))                  
                :type "bool")
                nil [4334 4608])
            ("tt_is_id" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4624 4650]))                  
                :type "bool")
                nil [4610 4766])
            ("tt_is_cmd_separator" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4793 4819]))                  
                :type "bool")
                nil [4768 4904])
            ("tt_is_paren" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [4923 4949]))                  
                :type "bool")
                nil [4906 5010])
            ("tt_is_unop" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [5028 5054]))                  
                :type "bool")
                nil [5012 5256])
            ("tt_is_binop" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [5275 5301]))                  
                :type "bool")
                nil [5258 5533])
            ("tt_left_assoc" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [5554 5580]))                  
                :type "bool")
                nil [5535 6433])
            ("tt_preced" function
               (:arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [6451 6477]))                  
                :type ("uint8" type (:type "class") nil nil))
                nil [6435 7154]))          
      :file "token.c"
      :pointmax 7155
      :fsize 7154
      :lastmodtime '(22655 30368 381187 260000)
      :unmatched-syntax nil)
    (semanticdb-table "lexer.h"
      :major-mode 'c-mode
      :tags 
        '( ("LEX_H" variable (:constant-flag t) nil [547 552])
            ("lib/types.h" include nil nil [554 576])
            ("lib/xvec.h" include nil nil [577 598])
            ("interpreter/interpreter.h" include nil nil [599 635])
            ("lex" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [883 906]))                  
                :type ("XVector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [863 907]))          
      :file "lexer.h"
      :pointmax 1035
      :fsize 1034
      :lastmodtime '(22651 39295 960474 608000)
      :unmatched-syntax nil
      :lexical-table 
        '(("LEX_H")
          )
)
    (semanticdb-table "lexer.c"
      :major-mode 'c-mode
      :tags 
        '( ("interpreter/lexer/lexer.h" include nil nil [154 190])
            ("ctype.h" include (:system-flag t) nil [192 210])
            ("lib/types.h" include nil nil [212 234])
            ("lib/macros.h" include nil nil [235 258])
            ("lib/xmalloc.h" include nil nil [259 283])
            ("lib/util.h" include nil nil [284 305])
            ("lib/str_stream.h" include nil nil [306 333])
            ("interpreter/err.h" include nil nil [334 362])
            ("interpreter/object/object.h" include nil nil [363 401])
            ("interpreter/lexer/token.h" include nil nil [402 438])
            ("__lexer" variable (:type ("" type
                 (:members 
                    ( ("buf" variable
                         (:dereference 1
                          :type "char")
                          (reparse-symbol classsubparts) [688 704])
                      ("stream" variable (:type ("StringStream" type
                           (:prototype t
                            :type "struct")
                            nil nil)) (reparse-symbol classsubparts) [709 736])
                      ("buf_len" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [741 756])
                      ("ln" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [761 771])
                      ("toks" variable
                         (:pointer 1
                          :type ("XVector" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [776 797])
                      ("prev_tok" variable
                         (:pointer 1
                          :type ("Token" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [802 831]))                    
                  :type "struct")
                  nil nil)) nil [675 842])
            ("__clear_buf" variable (:constant-flag t) nil [946 957])
            ("__save" variable (:constant-flag t) nil [1052 1058])
            ("__get_buf_val" variable (:constant-flag t) nil [1185 1198])
            ("__get_stream" variable (:constant-flag t) nil [1286 1298])
            ("__skip" variable (:constant-flag t) nil [1341 1347])
            ("__read" variable (:constant-flag t) nil [1391 1397])
            ("__get" variable (:constant-flag t) nil [1441 1446])
            ("__lookahead" variable (:constant-flag t) nil [1473 1484])
            ("__at_numlit" variable (:constant-flag t) nil [1533 1544])
            ("__at_newline" variable (:constant-flag t) nil [1595 1607])
            ("__at_eof" variable (:constant-flag t) nil [1653 1661])
            ("__at_id" variable (:constant-flag t) nil [1696 1703])
            ("__CURR_CH_SHOULD_BE" variable (:constant-flag t) nil [1872 1891])
            ("__get_toks_count" variable (:constant-flag t) nil [1982 1998])
            ("__get_ln" variable (:constant-flag t) nil [2028 2036])
            ("__incr_ln" variable (:constant-flag t) nil [2060 2069])
            ("__get_pt" variable (:constant-flag t) nil [2093 2101])
            ("__ptt_eq" variable (:constant-flag t) nil [2131 2139])
            ("__lexer_init" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2217 2240]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [2184 2412])
            ("__lexer_deinit" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2449 2454]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [2414 2477])
            ("__append_tok" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("tok" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Token" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2517 2541]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [2479 2630])
            ("__append_tok_keyword" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2670 2692]))                  
                :type "bool")
                nil [2632 2880])
            ("lex_strlit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3130 3135]))                  
                :type "bool")
                nil [3107 3998])
            ("lex_numlit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4155 4160]))                  
                :type "bool")
                nil [4132 4950])
            ("lex_identifier" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5068 5073]))                  
                :type "bool")
                nil [5041 5351])
            ("lex_comment" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5521 5526]))                  
                :type "bool")
                nil [5497 6120])
            ("lex_caret_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6261 6266]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [6235 6500])
            ("lex_pipe_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6645 6650]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [6620 6971])
            ("lex_amp_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7120 7125]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [7096 7447])
            ("lex_gt_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7606 7611]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [7583 8028])
            ("lex_lt_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8183 8188]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [8160 8605])
            ("lex_exclam_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8753 8758]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [8726 8978])
            ("lex_eq_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9117 9122]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [9094 9332])
            ("lex_modulus_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9477 9482]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [9449 9710])
            ("lex_slash_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9851 9856]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [9825 10078])
            ("lex_star_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10230 10235]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [10205 10662])
            ("lex_minus_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10820 10825]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [10794 11312])
            ("lex_plus_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11469 11474]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [11444 11956])
            ("lex" function
               (:pointer 1
                :arguments 
                  ( ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11978 12001]))                  
                :type ("XVector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [11958 14000]))          
      :file "lexer.c"
      :pointmax 19882
      :fsize 19881
      :lastmodtime '(22655 33591 365890 260000)
      :unmatched-syntax nil))
  :file "!home!wrongway4you!Projects!gsh!src!interpreter!lexer!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

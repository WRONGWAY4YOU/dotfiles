;; Object vm/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "vm/"
  :tables
  (list
    (semanticdb-table "vm.c"
      :major-mode 'c-mode
      :tags 
        '( ("lib/types.h" include nil nil [169 191])
            ("lib/macros.h" include nil nil [192 215])
            ("lib/dict.h" include nil nil [216 237])
            ("lib/hash.h" include nil nil [238 259])
            ("interpreter/object/object.h" include nil nil [260 298])
            ("interpreter/object/ops.h" include nil nil [299 334])
            ("interpreter/compiler/consts_list.h" include nil nil [335 380])
            ("interpreter/compiler/constant.h" include nil nil [381 423])
            ("interpreter/vm/vm.h" include nil nil [424 454])
            ("interpreter/vm/register.h" include nil nil [455 491])
            ("interpreter/vm/bytecode.h" include nil nil [492 528])
            ("interpreter/vm/instruction.h" include nil nil [529 568])
            ("lib/types.h" include nil nil [570 592])
            ("lib/macros.h" include nil nil [593 616])
            ("Environment" type
               (:members 
                  ( ("vars" variable (:type ("Dictionary" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [643 666])
                    ("prev" variable
                       (:pointer 1
                        :type ("Environment" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [671 696]))                  
                :type "struct")
                nil [618 699])
            ("__vm" variable (:type ("" type
                 (:members 
                    ( ("vars" variable (:type ("Dictionary" type
                           (:prototype t
                            :type "struct")
                            nil nil)) (reparse-symbol classsubparts) [742 765])
                      ("ip" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol classsubparts) [770 793])
                      ("rp" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol classsubparts) [798 821])
                      ("registers" variable
                         (:pointer 2
                          :type ("GShObject" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [826 855])
                      ("consts" variable
                         (:pointer 1
                          :type ("XVector" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [860 883])
                      ("raw_bc" variable
                         (:pointer 1
                          :type ("RawByteCode" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [888 915])
                      ("env" variable
                         (:pointer 1
                          :type ("Environment" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [920 944]))                    
                  :type "struct")
                  nil nil)) nil [729 952])
            ("VM_INCR_IP" variable (:constant-flag t) nil [1005 1015])
            ("VM_SET_IP" variable (:constant-flag t) nil [1052 1061])
            ("VM_GET_CONST" variable (:constant-flag t) nil [1092 1104])
            ("VM_SET_REG" variable (:constant-flag t) nil [1144 1154])
            ("VM_SET_REG" variable (:constant-flag t) nil [1144 1154])
            ("VM_GET_REG" variable (:constant-flag t) nil [1199 1209])
            ("INSTR_GET_ARG1_REG_OBJ" variable (:constant-flag t) nil [1242 1264])
            ("INSTR_GET_ARG2_REG_OBJ" variable (:constant-flag t) nil [1320 1342])
            ("INSTR_GET_ARG3_REG_OBJ" variable (:constant-flag t) nil [1398 1420])
            ("INSTR_GET_ARG1_CONST_OBJ" variable (:constant-flag t) nil [1477 1501])
            ("INSTR_GET_ARG2_CONST_OBJ" variable (:constant-flag t) nil [1553 1577])
            ("INSTR_GET_ARG3_CONST_OBJ" variable (:constant-flag t) nil [1629 1653])
            ("__vm_init" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1728 1748]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1698 1872])
            ("__vm_fetch" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1911 1916]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1874 1971])
            ("VM_SET_VAR" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2002 2025])
                    ("obj" variable
                       (:pointer 1
                        :type ("GShObject" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2030 2052]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1973 2102])
            ("VM_GET_VAR" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("name_obj" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("GShObject" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2145 2178]))                  
                :type ("GShObject" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2104 2504])
            ("execute_mov" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2760 2784]))                  
                :type "bool")
                nil [2731 3158])
            ("execute_load" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3190 3214]))                  
                :type "bool")
                nil [3160 3544])
            ("execute_varset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3578 3602]))                  
                :type "bool")
                nil [3546 4139])
            ("execute_varload" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4174 4198]))                  
                :type "bool")
                nil [4141 4678])
            ("execute_ret" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4704 4709]))                  
                :type "bool")
                nil [4680 4754])
            ("execute_jmpr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4847 4871]))                  
                :type "bool")
                nil [4817 5093])
            ("execute_jmprc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5126 5150]))                  
                :type "bool")
                nil [5095 5474])
            ("execute_jmprci" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5508 5532]))                  
                :type "bool")
                nil [5476 5851])
            ("execute_jmpa" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5944 5968]))                  
                :type "bool")
                nil [5914 6135])
            ("execute_jmpac" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6168 6192]))                  
                :type "bool")
                nil [6137 6529])
            ("execute_jmpaci" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable
                       (:constant-flag t
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6563 6587]))                  
                :type "bool")
                nil [6531 6898])
            ("execute_instr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6960 6978]))                  
                :type "bool")
                nil [6934 10497])
            ("execute" function
               (:arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10512 10532]))                  
                :type "bool")
                nil [10499 10769]))          
      :file "vm.c"
      :pointmax 10770
      :fsize 10769
      :lastmodtime '(22654 6618 831370 321000)
      :unmatched-syntax nil
      :lexical-table 
        '(("VM_INCR_IP" (spp-arg-list ("offset") 1018 . 1026) . ((semantic-list "(__vm.ip += offset)" 1027 . 1046)))
          ("VM_GET_CONST" (spp-arg-list ("id") 1107 . 1111) . 
              ((symbol "__vm" 1112 . 1116) (punctuation "." 1116 . 1117) (symbol "consts" 1117 . 1123) (semantic-list "[id]" 1123 . 1127)))
          ("VM_SET_IP" (spp-arg-list ("pos") 1064 . 1069) . ((semantic-list "(__vm.ip = pos)" 1070 . 1085)))
          ("INSTR_GET_ARG1_REG_OBJ" (spp-arg-list ("instr") 1257 . 1264) . ((semantic-list "(__vm.registers[INSTR_GET_ARG1(instr)])" 1265 . 1304)))
          ("INSTR_GET_ARG1_CONST_OBJ" (spp-arg-list ("instr") 1494 . 1501) . ((symbol "VM_GET_CONST" 1502 . 1514) (semantic-list "(INSTR_GET_ARG1(instr))" 1514 . 1537)))
          ("INSTR_GET_ARG3_REG_OBJ" (spp-arg-list ("instr") 1413 . 1420) . ((semantic-list "(__vm.registers[INSTR_GET_ARG3(instr)])" 1421 . 1460)))
          ("INSTR_GET_ARG2_CONST_OBJ" (spp-arg-list ("instr") 1570 . 1577) . ((symbol "VM_GET_CONST" 1578 . 1590) (semantic-list "(INSTR_GET_ARG2(instr))" 1590 . 1613)))
          ("VM_SET_REG" (spp-arg-list ("id" "obj") 1154 . 1163) . ((semantic-list "(__vm.registers[id] = obj)" 1164 . 1190)))
          ("INSTR_GET_ARG3_CONST_OBJ" (spp-arg-list ("instr") 1646 . 1653) . ((symbol "VM_GET_CONST" 1654 . 1666) (semantic-list "(INSTR_GET_ARG3(instr))" 1666 . 1689)))
          ("VM_GET_REG" (spp-arg-list ("id") 1202 . 1206) . ((semantic-list "(VM.registers[id])" 1207 . 1225)))
          ("INSTR_GET_ARG2_REG_OBJ" (spp-arg-list ("instr") 1335 . 1342) . ((semantic-list "(__vm.registers[INSTR_GET_ARG2(instr)])" 1343 . 1382)))
          )
)
    (semanticdb-table "vm.h"
      :major-mode 'c-mode
      :tags 
        '( ("VM_H" variable (:constant-flag t) nil [190 194])
            ("lib/types.h" include nil nil [196 218])
            ("interpreter/vm/bytecode.h" include nil nil [219 255])
            ("execute" function
               (:prototype-flag t
                :arguments 
                  ( ("bytecode" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [270 296]))                  
                :type "bool")
                nil [257 297]))          
      :file "vm.h"
      :pointmax 317
      :fsize 316
      :lastmodtime '(22655 14805 768621 360000)
      :unmatched-syntax nil
      :lexical-table 
        '(("VM_H")
          )
)
    (semanticdb-table "instruction.h"
      :major-mode 'c-mode
      :tags 
        '( ("INSTRUCTION_H" variable (:constant-flag t) nil [525 538])
            ("lib/types.h" include nil nil [540 562])
            ("lib/macros.h" include nil nil [563 586])
            ("lib/bitops.h" include nil nil [587 610])
            ("interpreter/vm/register.h" include nil nil [612 648])
            ("Instruction" type
               (:typedef ("uint64" type (:type "class") nil nil)
                :type "typedef")
                nil [650 677])
            ("InstructionPosition" type
               (:typedef ("uint64" type (:type "class") nil nil)
                :type "typedef")
                nil [678 713])
            ("InstructionOffset" type
               (:typedef ("int64" type (:type "class") nil nil)
                :type "typedef")
                nil [714 746])
            ("InstructionCode" type
               (:members 
                  ( ("IOP_MOV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1431 1439])
                    ("IOP_LOAD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1514 1523])
                    ("IOP_VARSET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1598 1609])
                    ("IOP_VARLOAD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1681 1693])
                    ("IOP_JMPR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1765 1774])
                    ("IOP_JMPRC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1848 1858])
                    ("IOP_JMPRCI" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1931 1942])
                    ("IOP_JMPA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2014 2023])
                    ("IOP_JMPAC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2097 2107])
                    ("IOP_JMPACI" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2180 2191])
                    ("IOP_RET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2263 2271])
                    ("IOP_NEG" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2347 2355])
                    ("IOP_NOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2430 2438])
                    ("IOP_BNOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2513 2522])
                    ("IOP_INCR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2596 2605])
                    ("IOP_DECR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2679 2688])
                    ("IOP_ADD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2763 2771])
                    ("IOP_SUB" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2846 2854])
                    ("IOP_MUL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2859 2867])
                    ("IOP_DIV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2872 2880])
                    ("IOP_MOD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2885 2893])
                    ("IOP_POW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2898 2906])
                    ("IOP_BAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2911 2920])
                    ("IOP_BOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2925 2933])
                    ("IOP_BXOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2938 2947])
                    ("IOP_LS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2952 2959])
                    ("IOP_RS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2964 2971])
                    ("IOP_EQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2977 2984])
                    ("IOP_NEQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2989 2997])
                    ("IOP_LT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3002 3009])
                    ("IOP_GT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3014 3021])
                    ("IOP_LTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3026 3034])
                    ("IOP_GTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3039 3047])
                    ("IOP_LAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3052 3061])
                    ("IOP_LOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3066 3075]))                  
                :type "enum")
                nil [1238 3076])
            ("INSTRUCTION_ARG_SIZE" variable (:constant-flag t) nil [3132 3152])
            ("INSTRUCTION_CODE_POS" variable (:constant-flag t) nil [3277 3297])
            ("INSTRUCTION_CODE_SIZE" variable (:constant-flag t) nil [3308 3329])
            ("INSTR_SET_CODE" variable (:constant-flag t) nil [3341 3355])
            ("INSTR_GET_CODE" variable (:constant-flag t) nil [3454 3468])
            ("INSTR_CODE_IS_BINOP" variable (:constant-flag t) nil [3557 3576])
            ("INSTR_CODE_IS_UNOP" variable (:constant-flag t) nil [3631 3649])
            ("INSTR_CODE_BINOP_IS_ARITH" variable (:constant-flag t) nil [3707 3732])
            ("INSTRUCTION_ARG1_POS" variable (:constant-flag t) nil [3925 3945])
            ("INSTRUCTION_ARG1_SIZE" variable (:constant-flag t) nil [4010 4031])
            ("INSTR_SET_ARG1" variable (:constant-flag t) nil [4062 4076])
            ("INSTR_GET_ARG1" variable (:constant-flag t) nil [4173 4187])
            ("INSTRUCTION_ARG2_POS" variable (:constant-flag t) nil [4412 4432])
            ("INSTRUCTION_ARG2_SIZE" variable (:constant-flag t) nil [4497 4518])
            ("INSTR_SET_ARG2" variable (:constant-flag t) nil [4549 4563])
            ("INSTR_GET_ARG2" variable (:constant-flag t) nil [4660 4674])
            ("INSTRUCTION_ARG3_POS" variable (:constant-flag t) nil [4899 4919])
            ("INSTRUCTION_ARG3_SIZE" variable (:constant-flag t) nil [4984 5005])
            ("INSTR_SET_ARG3" variable (:constant-flag t) nil [5036 5050])
            ("INSTR_GET_ARG3" variable (:constant-flag t) nil [5147 5161])
            ("INSTR_ASSERT_CODE" variable (:constant-flag t) nil [5362 5379])
            ("instr_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("code" variable (:type ("InstructionCode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [5580 5606]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [5546 5607])
            ("instr_mov_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("rid1" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5647 5663])
                    ("rid2" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5668 5684]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [5609 5685])
            ("instr_load_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5726 5742])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5747 5762]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [5687 5763])
            ("instr_varset_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("var_name_const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5806 5831])
                    ("const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5836 5852]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [5765 5853])
            ("instr_varload_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("var_name_const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5897 5922])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5927 5942]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [5855 5943])
            ("instr_jmpr_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("offset" variable (:type ("InstructionOffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6004 6029]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [5965 6030])
            ("instr_jmprc_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("offset" variable (:type ("InstructionOffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6072 6097])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6102 6117]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6032 6118])
            ("instr_jmprci_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("offset" variable (:type ("InstructionOffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6161 6186])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6191 6206]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6120 6207])
            ("instr_jmpa_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("pos" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6268 6292]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6229 6293])
            ("instr_jmpac_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("pos" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6335 6359])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6364 6379]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6295 6380])
            ("instr_jmpaci_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("pos" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6423 6447])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6452 6467]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6382 6468])
            ("instr_ret_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6503 6508]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6470 6509])
            ("instr_unop_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("code" variable (:type ("InstructionCode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [6572 6598])
                    ("rid1" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6603 6619])
                    ("rid2" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6624 6640]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6533 6641])
            ("instr_binop_new" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("code" variable (:type ("InstructionCode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [6706 6732])
                    ("rid1" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6737 6753])
                    ("rid2" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6758 6774])
                    ("rid3" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6779 6795]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [6666 6796]))          
      :file "instruction.h"
      :pointmax 6825
      :fsize 6824
      :lastmodtime '(22655 14826 913619 411000)
      :unmatched-syntax nil
      :lexical-table 
        '(("INSTRUCTION_ARG2_SIZE" . ((symbol "INSTRUCTION_ARG_SIZE" 4519 . 4539)))
          ("INSTR_SET_CODE" (spp-arg-list ("instr" "code") 3355 . 3368) . ((symbol "SET_BITS" 3379 . 3387) (semantic-list "(instr, INSTRUCTION_CODE_POS, INSTRUCTION_CODE_SIZE, code)" 3387 . 3445)))
          ("INSTR_CODE_IS_BINOP" (spp-arg-list ("code") 3576 . 3582) . ((semantic-list "((code >= IOP_ADD) && (code <= IOP_RS))" 3583 . 3622)))
          ("INSTRUCTION_ARG1_POS" . ((semantic-list "(INSTRUCTION_CODE_SIZE + INSTRUCTION_CODE_POS)" 3955 . 4001)))
          ("INSTR_SET_ARG1" (spp-arg-list ("instr" "arg") 4076 . 4088) . ((symbol "SET_BITS" 4099 . 4107) (semantic-list "(instr, INSTRUCTION_ARG1_POS, INSTRUCTION_ARG1_SIZE, arg)" 4107 . 4164)))
          ("INSTRUCTION_H")
          ("INSTR_CODE_IS_UNOP" (spp-arg-list ("code") 3649 . 3655) . ((semantic-list "((code >= IOP_NEG) && (code <= IOP_DECR))" 3656 . 3697)))
          ("INSTR_SET_ARG2" (spp-arg-list ("instr" "arg") 4563 . 4575) . ((symbol "SET_BITS" 4586 . 4594) (semantic-list "(instr, INSTRUCTION_ARG2_POS, INSTRUCTION_ARG2_SIZE, arg)" 4594 . 4651)))
          ("INSTR_GET_CODE" (spp-arg-list ("instr") 3468 . 3475) . ((symbol "GET_BITS" 3487 . 3495) (semantic-list "(instr, INSTRUCTION_CODE_POS, INSTRUCTION_CODE_SIZE)" 3495 . 3547)))
          ("INSTR_CODE_BINOP_IS_ARITH" (spp-arg-list ("code") 3732 . 3738) . ((semantic-list "((code >= IOP_ADD) && (code <= IOP_POW))" 3739 . 3779)))
          ("INSTRUCTION_ARG1_SIZE" . ((symbol "INSTRUCTION_ARG_SIZE" 4032 . 4052)))
          ("INSTRUCTION_ARG2_POS" . ((semantic-list "(INSTRUCTION_ARG1_SIZE + INSTRUCTION_ARG1_POS)" 4442 . 4488)))
          ("INSTR_SET_ARG3" (spp-arg-list ("instr" "arg") 5050 . 5062) . ((symbol "SET_BITS" 5073 . 5081) (semantic-list "(instr, INSTRUCTION_ARG3_POS, INSTRUCTION_ARG3_SIZE, arg)" 5081 . 5138)))
          ("INSTRUCTION_ARG_SIZE" . ((number "19" 3153 . 3155)))
          ("INSTR_GET_ARG1" (spp-arg-list ("instr") 4187 . 4194) . ((symbol "GET_BITS" 4206 . 4214) (semantic-list "(instr, INSTRUCTION_ARG1_POS, INSTRUCTION_ARG1_SIZE)" 4214 . 4266)))
          ("INSTR_GET_ARG2" (spp-arg-list ("instr") 4674 . 4681) . ((symbol "GET_BITS" 4693 . 4701) (semantic-list "(instr, INSTRUCTION_ARG2_POS, INSTRUCTION_ARG2_SIZE)" 4701 . 4753)))
          ("INSTRUCTION_ARG3_POS" . ((semantic-list "(INSTRUCTION_ARG2_SIZE + INSTRUCTION_ARG2_POS)" 4929 . 4975)))
          ("INSTR_GET_ARG3" (spp-arg-list ("instr") 5161 . 5168) . ((symbol "GET_BITS" 5180 . 5188) (semantic-list "(instr, INSTRUCTION_ARG3_POS, INSTRUCTION_ARG3_SIZE)" 5188 . 5240)))
          ("INSTRUCTION_CODE_SIZE" . ((number "7" 3330 . 3331)))
          ("INSTRUCTION_ARG3_SIZE" . ((symbol "INSTRUCTION_ARG_SIZE" 5006 . 5026)))
          ("INSTR_ASSERT_CODE" (spp-arg-list ("instr" "code") 5379 . 5392) . ((symbol "DEBUG_ASSERT" 5401 . 5413) (semantic-list "(INSTR_GET_CODE(instr) == (code), \"\")" 5413 . 5450)))
          ("INSTRUCTION_CODE_POS" . ((number "0" 3298 . 3299)))
          )
)
    (semanticdb-table "instruction.c"
      :major-mode 'c-mode
      :tags 
        '( ("interpreter/vm/instruction.h" include nil nil [134 173])
            ("instr_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("code" variable (:type ("InstructionCode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [303 329]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [269 411])
            ("instr_mov_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("rid1" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [451 467])
                    ("rid2" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472 488]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [413 620])
            ("instr_load_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [661 677])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [682 697]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [622 833])
            ("instr_varset_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("var_name_const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [876 901])
                    ("const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [906 922]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [835 1074])
            ("instr_varload_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("var_name_const_id" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1118 1143])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1148 1163]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1076 1311])
            ("instr_jmpr_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("offset" variable (:type ("InstructionOffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1372 1397]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1333 1499])
            ("instr_jmprc_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("offset" variable (:type ("InstructionOffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1541 1566])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1571 1586]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1501 1721])
            ("instr_jmprci_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("offset" variable (:type ("InstructionOffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1764 1789])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1794 1809]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1723 1945])
            ("instr_jmpa_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("pos" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2006 2030]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1967 2129])
            ("instr_jmpac_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("pos" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2171 2195])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2200 2215]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [2131 2347])
            ("instr_jmpaci_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("pos" variable (:type ("InstructionPosition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2390 2414])
                    ("rid" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2419 2434]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [2349 2567])
            ("instr_ret_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2602 2607]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [2569 2673])
            ("instr_unop_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("code" variable (:type ("InstructionCode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [2736 2762])
                    ("rid1" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2767 2783])
                    ("rid2" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2788 2804]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [2697 2933])
            ("instr_binop_new" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("code" variable (:type ("InstructionCode" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [2998 3024])
                    ("rid1" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3029 3045])
                    ("rid2" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3050 3066])
                    ("rid3" variable (:type ("RegisterID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3071 3087]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [2958 3249]))          
      :file "instruction.c"
      :pointmax 3250
      :fsize 3249
      :lastmodtime '(22654 13698 383717 938000)
      :unmatched-syntax nil)
    (semanticdb-table "bytecode.h"
      :major-mode 'c-mode
      :tags 
        '( ("BYTECODE_H" variable (:constant-flag t) nil [199 209])
            ("lib/types.h" include nil nil [211 233])
            ("lib/macros.h" include nil nil [234 257])
            ("lib/dict.h" include nil nil [258 279])
            ("lib/xvec.h" include nil nil [280 301])
            ("interpreter/vm/instruction.h" include nil nil [303 342])
            ("RAW_BYTECODE_ALLOC_SIZE" variable (:constant-flag t) nil [352 375])
            ("RAW_BYTECODE_INIT_CAPACITY" variable (:constant-flag t) nil [388 414])
            ("RawByteCode" type
               (:members 
                  ( ("instructions" variable
                       (:pointer 1
                        :type ("Instruction" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [665 691])
                    ("size" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [696 708])
                    ("capacity" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [713 729]))                  
                :type "struct")
                nil [640 732])
            ("ByteCode" type
               (:members 
                  ( ("consts" variable (:type ("XVector" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [1012 1034])
                    ("raw" variable (:type ("RawByteCode" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [1039 1062]))                  
                :type "struct")
                nil [990 1065])
            ("raw_bytecode_init" function
               (:prototype-flag t
                :arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1178 1202]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1149 1203])
            ("raw_bytecode_deinit" function
               (:prototype-flag t
                :arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1236 1260]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1205 1261])
            ("raw_bytecode_get" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1304 1328])
                    ("i" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1333 1342]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1263 1343])
            ("raw_bytecode_append" function
               (:prototype-flag t
                :arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1376 1400])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1405 1423]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1345 1424])
            ("raw_bytecode_insert" function
               (:prototype-flag t
                :arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1457 1481])
                    ("pos" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1486 1497])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1502 1520]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1426 1521])
            ("bytecode_init" function
               (:prototype-flag t
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1613 1633]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1593 1634])
            ("bytecode_deinit" function
               (:prototype-flag t
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1658 1678]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1636 1679])
            ("bytecode_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1711 1716]))                  
                :type ("ByteCode" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1681 1717])
            ("bytecode_delete" function
               (:prototype-flag t
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1741 1761]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1719 1762])
            ("bytecode_get_instr" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1807 1827])
                    ("i" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1832 1841]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [1764 1842])
            ("bytecode_append_instr" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1884 1904])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1909 1927]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1844 1928])
            ("bytecode_insert_instr" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1970 1990])
                    ("pos" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1995 2006])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2011 2029]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1930 2030]))          
      :file "bytecode.h"
      :pointmax 2056
      :fsize 2055
      :lastmodtime '(22655 14797 80622 160000)
      :unmatched-syntax nil
      :lexical-table 
        '(("RAW_BYTECODE_ALLOC_SIZE" . ((number "128" 376 . 379)))
          ("BYTECODE_H")
          ("RAW_BYTECODE_INIT_CAPACITY" . ((semantic-list "(RAW_BYTECODE_ALLOC_SIZE + RAW_BYTECODE_ALLOC_SIZE)" 423 . 474)))
          )
)
    (semanticdb-table "bytecode.c"
      :major-mode 'c-mode
      :tags 
        '( ("interpreter/object/object.h" include nil nil [157 195])
            ("interpreter/vm/instruction.h" include nil nil [196 235])
            ("interpreter/vm/bytecode.h" include nil nil [236 272])
            ("raw_bytecode_init" function
               (:arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [382 406]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [353 563])
            ("raw_bytecode_deinit" function
               (:arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [596 620]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [565 654])
            ("raw_bytecode_get" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [697 721])
                    ("i" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [726 735]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [656 868])
            ("raw_bytecode_append" function
               (:arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [901 925])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [930 948]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [870 1181])
            ("raw_bytecode_insert" function
               (:arguments 
                  ( ("raw" variable
                       (:pointer 1
                        :type ("RawByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1214 1238])
                    ("pos" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1243 1254])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1259 1277]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1183 1493])
            ("bytecode_init" function
               (:arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1585 1605]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1565 1670])
            ("bytecode_deinit" function
               (:arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1694 1714]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1672 1911])
            ("bytecode_new" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1943 1948]))                  
                :type ("ByteCode" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1913 2082])
            ("bytecode_delete" function
               (:arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2106 2126]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [2084 2170])
            ("bytecode_get_instr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2215 2235])
                    ("i" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2240 2249]))                  
                :type ("Instruction" type (:type "class") nil nil))
                nil [2172 2295])
            ("bytecode_append_instr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2337 2357])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2362 2380]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [2297 2426])
            ("bytecode_insert_instr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("bc" variable
                       (:pointer 1
                        :type ("ByteCode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2468 2488])
                    ("pos" variable (:type ("uint64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2493 2504])
                    ("instr" variable (:type ("Instruction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2509 2527]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [2428 2578]))          
      :file "bytecode.c"
      :pointmax 2579
      :fsize 2578
      :lastmodtime '(22654 13988 295691 222000)
      :unmatched-syntax nil)
    (semanticdb-table "register.h"
      :major-mode 'c-mode
      :tags 
        '( ("REGISTER_H" variable (:constant-flag t) nil [157 167])
            ("lib/types.h" include nil nil [169 191])
            ("RegisterID" type
               (:typedef ("uint32" type (:type "class") nil nil)
                :type "typedef")
                nil [193 219]))          
      :file "register.h"
      :pointmax 245
      :fsize 244
      :lastmodtime '(22654 5717 894453 342000)
      :unmatched-syntax nil
      :lexical-table 
        '(("VM_REG_COUNT" . ((number "1024" 190 . 194)))
          ("REGISTER_H")
          )
))
  :file "!home!wrongway4you!Projects!gsh!src!interpreter!vm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

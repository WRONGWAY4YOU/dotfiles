;; Object ede/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ede/"
  :tables
  (list
    (semanticdb-table "proj.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("ede/proj-comp" include nil nil [1225 1249])
            ("ede/make" include nil nil [1250 1269])
            ("declare-function" code nil nil [1271 1326])
            ("declare-function" code nil nil [1327 1388])
            ("ede-proj-target-aux" function (:prototype-flag t) nil [1390 1488])
            ("ede-proj-target-elisp" function (:prototype-flag t) nil [1489 1591])
            ("ede-proj-target-elisp-autoloads" function (:prototype-flag t) nil [1592 1708])
            ("ede-proj-target-scheme" function (:prototype-flag t) nil [1709 1813])
            ("ede-proj-target-makefile-miscelaneous" function (:prototype-flag t) nil [1814 1956])
            ("ede-proj-target-makefile-program" function (:prototype-flag t) nil [1957 2066])
            ("ede-proj-target-makefile-archive" function (:prototype-flag t) nil [2067 2195])
            ("ede-proj-target-makefile-shared-object" function (:prototype-flag t) nil [2196 2319])
            ("ede-proj-target-makefile-info" function (:prototype-flag t) nil [2320 2418])
            ("eieio-defclass-autoload" code nil nil [2420 2546])
            ("eieio-defclass-autoload" code nil nil [2547 2686])
            ("eieio-defclass-autoload" code nil nil [2687 2837])
            ("eieio-defclass-autoload" code nil nil [2838 2970])
            ("eieio-defclass-autoload" code nil nil [2971 3150])
            ("eieio-defclass-autoload" code nil nil [3151 3308])
            ("eieio-defclass-autoload" code nil nil [3309 3485])
            ("eieio-defclass-autoload" code nil nil [3486 3654])
            ("eieio-defclass-autoload" code nil nil [3655 3790])
            ("eieio-defclass-autoload" code nil nil [3831 3984])
            ("ede-proj-target" type
               (:superclasses "ede-target"
                :members 
                  ( ("auxsource" variable
                       (:documentation "Auxiliary source files included in this target.
Each of these is considered equivalent to a source file, but it is not
distributed, and each should have a corresponding rule to build it."
                        :default-value "nil"
                        :type "list")
                        nil nil)
                    ("dirty" variable
                       (:documentation "Non-nil when generated files needs updating."
                        :default-value "nil"
                        :type "boolean")
                        nil nil)
                    ("compiler" variable
                       (:documentation "The compiler to be used to compile this object.
This should be a symbol, which contains the object defining the compiler.
This enables save/restore to do so by name, permitting the sharing
of these compiler resources, and global customization thereof."
                        :default-value "nil"
                        :type "(or null symbol)")
                        nil nil)
                    ("linker" variable
                       (:documentation "The linker to be used to link compiled sources for this object.
This should be a symbol, which contains the object defining the linker.
This enables save/restore to do so by name, permitting the sharing
of these linker resources, and global customization thereof."
                        :default-value "nil"
                        :type "(or null symbol)")
                        nil nil)
                    ("phony" variable
                       (:documentation "A phony target is one where the build target does not relate to a file.
Such targets are always built, but make knows how to deal with them.."
                        :static-flag t
                        :default-value "nil"
                        :type "boolean")
                        nil nil)
                    ("availablecompilers" variable
                       (:documentation "A list of `ede-compiler' objects.
These are the compilers the user can choose from when setting the
`compiler' slot."
                        :static-flag t
                        :default-value "nil"
                        :type "(or null list)")
                        nil nil)
                    ("availablelinkers" variable
                       (:documentation "A list of `ede-linker' objects.
These are the linkers the user can choose from when setting the
`linker' slot."
                        :static-flag t
                        :default-value "nil"
                        :type "(or null list)")
                        nil nil))                  
                :type "class")
                nil [4009 6484])
            ("ede-proj-target-makefile" type
               (:superclasses "ede-proj-target"
                :members 
                  ( ("makefile" variable
                       (:documentation "File name of generated Makefile."
                        :default-value "Makefile"
                        :type "string")
                        nil nil)
                    ("partofall" variable
                       (:documentation "Non nil means the rule created is part of the all target.
Setting this to nil creates the rule to build this item, but does not
include it in the ALL`all:' rule."
                        :default-value "t"
                        :type "boolean")
                        nil nil)
                    ("configuration-variables" variable
                       (:documentation "Makefile variables appended to use in different configurations.
These variables are used in the makefile when a configuration becomes active.
Target variables are always renamed such as foo_CFLAGS, then included into
commands where the variable would usually appear."
                        :default-value "nil"
                        :type "list")
                        nil nil)
                    ("rules" variable
                       (:documentation "Arbitrary rules and dependencies needed to make this target.
It is safe to leave this blank."
                        :default-value "nil"
                        :type "list")
                        nil nil))                  
                :type "class")
                nil [6486 8014])
            ("ede-proj-target-alist" variable (:default-value (quote (("program" . ede-proj-target-makefile-program) ("archive" . ede-proj-target-makefile-archive) ("sharedobject" . ede-proj-target-makefile-shared-object) ("emacs lisp" . ede-proj-target-elisp) ("emacs lisp autoloads" . ede-proj-target-elisp-autoloads) ("info" . ede-proj-target-makefile-info) ("auxiliary" . ede-proj-target-aux) ("scheme" . ede-proj-target-scheme) ("miscellaneous" . ede-proj-target-makefile-miscelaneous)))) nil [8016 8581])
            ("ede-proj-register-target" function (:arguments ("name" "class")) nil [8583 8906])
            ("ede-proj-project" type
               (:interfaces ("ede-project")
                :superclasses "eieio-persistent"
                :members 
                  ( ("extension" variable (:default-value ".ede") nil nil)
                    ("file-header-line" variable (:default-value ";; EDE Project Files are auto generated: Do Not Edit") nil nil)
                    ("makefile-type" variable
                       (:documentation "The type of Makefile to generate.
Can be one of 'Makefile, 'Makefile.in, or 'Makefile.am.
If this value is NOT 'Makefile, then that overrides the :makefile slot
in targets."
                        :default-value "Makefile"
                        :type "symbol")
                        nil nil)
                    ("variables" variable
                       (:documentation "Variables to set in this Makefile."
                        :default-value "nil"
                        :type "list")
                        nil nil)
                    ("configuration-variables" variable
                       (:documentation "Makefile variables to use in different configurations.
These variables are used in the makefile when a configuration becomes active."
                        :default-value "(\"debug\" ((\"DEBUG\" . \"1\")))"
                        :type "list")
                        nil nil)
                    ("inference-rules" variable
                       (:documentation "Inference rules to add to the makefile."
                        :default-value "nil")
                        nil nil)
                    ("include-file" variable
                       (:documentation "Additional files to include.
These files can contain additional rules, variables, and customizations."
                        :default-value "nil")
                        nil nil)
                    ("automatic-dependencies" variable
                       (:documentation "Non-nil to do implement automatic dependencies in the Makefile."
                        :default-value "t"
                        :type "boolean")
                        nil nil)
                    ("menu" variable (:default-value "([\"Regenerate Makefiles\" ede-proj-regenerate t] [\"Upload Distribution\" ede-upload-distribution t])") nil nil)
                    ("metasubproject" variable
                       (:documentation "Non-nil if this is a metasubproject.
Usually, a subproject is determined by a parent project.  If multiple top level
projects are grouped into a large project not maintained by EDE, then you need
to set this to non-nil.  The only effect is that the `dist' rule will then avoid
making a tar file."
                        :default-value "nil"
                        :type "boolean")
                        nil nil))                  
                :type "class")
                nil [8908 11468])
            ("ede-proj-load" function (:arguments ("project" "rootproj")) nil [11480 12515])
            ("ede-proj-save" function (:arguments ("project")) nil [12517 12903])
            ("ede-commit-local-variables" function
               (:parent "ede-proj-project"
                :arguments ("proj"))
                nil [12905 13038])
            ("eieio-done-customizing" function
               (:parent "ede-proj-project"
                :arguments ("proj"))
                nil [13040 13242])
            ("eieio-done-customizing" function
               (:parent "ede-proj-target"
                :arguments ("target"))
                nil [13244 13493])
            ("ede-commit-project" function
               (:parent "ede-proj-project"
                :arguments ("proj"))
                nil [13495 13617])
            ("ede-buffer-mine" function
               (:parent "ede-proj-project"
                :arguments ("this" "buffer"))
                nil [13619 14134])
            ("ede-buffer-mine" function
               (:parent "ede-proj-target"
                :arguments ("this" "buffer"))
                nil [14136 14357])
            ("ede-proj-target-history" variable nil nil [14390 14471])
            ("project-new-target" function
               (:parent "ede-proj-project"
                :arguments ("this" "name" "type" "autoadd"))
                nil [14473 15835])
            ("project-new-target-custom" function
               (:parent "ede-proj-project"
                :arguments ("this"))
                nil [15837 16234])
            ("project-delete-target" function
               (:parent "ede-proj-target"
                :arguments ("this"))
                nil [16236 16951])
            ("project-add-file" function
               (:parent "ede-proj-target"
                :arguments ("this" "file"))
                nil [16953 17572])
            ("project-remove-file" function
               (:parent "ede-proj-target"
                :arguments ("target" "file"))
                nil [17574 17915])
            ("project-update-version" function
               (:parent "ede-proj-project"
                :arguments ("this"))
                nil [17917 18041])
            ("project-make-dist" function
               (:parent "ede-proj-project"
                :arguments ("this"))
                nil [18043 18615])
            ("project-dist-files" function
               (:parent "ede-proj-project"
                :arguments ("this"))
                nil [18617 18896])
            ("project-compile-project" function
               (:parent "ede-proj-project"
                :arguments ("proj" "command"))
                nil [18898 19390])
            ("project-compile-target" function
               (:parent "ede-proj-target"
                :arguments ("obj" "command"))
                nil [19439 19674])
            ("project-compile-target" function
               (:parent "ede-proj-target-makefile"
                :arguments ("obj" "command"))
                nil [19676 20045])
            ("project-debug-target" function
               (:parent "ede-proj-target"
                :arguments ("obj"))
                nil [20047 20226])
            ("project-run-target" function
               (:parent "ede-proj-target"
                :arguments ("obj"))
                nil [20228 20389])
            ("ede-proj-makefile-target-name" function
               (:parent "ede-proj-target"
                :arguments ("this"))
                nil [20391 20531])
            ("ede-want-file-auxiliary-p" function
               (:parent "ede-target"
                :arguments ("this" "file"))
                nil [20577 20913])
            ("ede-proj-compilers" function
               (:parent "ede-proj-target"
                :arguments ("obj"))
                nil [20915 22303])
            ("ede-proj-linkers" function
               (:parent "ede-proj-target"
                :arguments ("obj"))
                nil [22305 23727])
            ("ede-proj-makefile-type" function (:arguments ("proj")) nil [23789 23938])
            ("ede-proj-automake-p" function (:arguments ("proj")) nil [23940 24099])
            ("ede-proj-autoconf-p" function (:arguments ("proj")) nil [24101 24260])
            ("ede-proj-make-p" function (:arguments ("proj")) nil [24262 24414])
            ("ede-proj-dist-makefile" function
               (:parent "ede-proj-project"
                :arguments ("this"))
                nil [24416 25260])
            ("ede-proj-regenerate" function (:user-visible-flag t) nil [25262 25421])
            ("ede-proj-makefile-create-maybe" function
               (:parent "ede-proj-project"
                :arguments ("this" "mfilename"))
                nil [25423 25831])
            ("ede-proj-setup-buildenvironment" function
               (:parent "ede-proj-project"
                :arguments ("this" "force"))
                nil [25833 26821])
            ("project-rescan" function
               (:parent "ede-proj-project"
                :arguments ("this"))
                nil [26854 27206])
            ("ede/proj" package nil nil [27208 27227]))          
      :file "proj.el"
      :pointmax 27255
      :fsize 27254
      :lastmodtime '(21788 61018 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "proj-comp.el"
      :file "proj-comp.el"
      :fsize 13305
      :lastmodtime '(21788 61018 0 0))
    (semanticdb-table "make.el"
      :file "make.el"
      :fsize 3590
      :lastmodtime '(21710 25077 0 0)))
  :file "!usr!share!emacs!24.5!lisp!cedet!ede!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

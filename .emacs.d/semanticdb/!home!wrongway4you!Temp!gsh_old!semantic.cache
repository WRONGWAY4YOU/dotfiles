;; Object gsh_old/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "gsh_old/"
  :tables
  (list
    (semanticdb-table "instruction.h"
      :major-mode 'c-mode
      :tags 
        '( ("INSTRUCTION_H" variable (:constant-flag t) nil [464 477])
            ("lib/bit.h" include nil nil [479 499])
            ("I_OPCODE_POS" variable (:constant-flag t) nil [509 521])
            ("I_OPCODE_SIZE" variable (:constant-flag t) nil [532 545])
            ("I_ARG_A_POS" variable (:constant-flag t) nil [557 568])
            ("I_ARG_A_SIZE" variable (:constant-flag t) nil [608 620])
            ("I_ARG_B_POS" variable (:constant-flag t) nil [633 644])
            ("I_ARG_B_SIZE" variable (:constant-flag t) nil [682 694])
            ("I_ARG_C_POS" variable (:constant-flag t) nil [707 718])
            ("I_ARG_C_SIZE" variable (:constant-flag t) nil [756 768])
            ("instr_set_opcode" variable (:constant-flag t) nil [781 797])
            ("instr_get_opcode" variable (:constant-flag t) nil [884 900])
            ("instr_get_opcode" variable (:constant-flag t) nil [884 900])
            ("instr_set_argA" variable (:constant-flag t) nil [962 976])
            ("instr_get_argA" variable (:constant-flag t) nil [1052 1066])
            ("instr_set_argA" variable (:constant-flag t) nil [1143 1157])
            ("instr_get_argA" variable (:constant-flag t) nil [1233 1247])
            ("instr_set_argB" variable (:constant-flag t) nil [1324 1338])
            ("instr_get_argB" variable (:constant-flag t) nil [1414 1428])
            ("instr_set_argC" variable (:constant-flag t) nil [1505 1519])
            ("instr_get_argC" variable (:constant-flag t) nil [1595 1609])
            ("Instruction" type
               (:typedef ("uint64" type (:type "class") nil nil)
                :type "typedef")
                nil [1678 1705])
            ("OpCode" type
               (:members 
                  ( ("OP_MOV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2010 2017])
                    ("OP_JMP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2076 2083])
                    ("OP_JMPS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2210 2218])
                    ("OP_RET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2293 2300])
                    ("OP_ADD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2351 2358])
                    ("OP_SUB" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2427 2434])
                    ("OP_MUL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2492 2499])
                    ("OP_DIV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2563 2570])
                    ("OP_MOD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2651 2658])
                    ("OP_POW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2734 2741])
                    ("OP_EQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2780 2786])
                    ("OP_NEQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2829 2836])
                    ("OP_LT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2878 2884])
                    ("OP_GT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2929 2935])
                    ("OP_LTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2987 2994])
                    ("OP_GTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3049 3056])
                    ("OP_LNOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3100 3108])
                    ("OP_LAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3152 3160])
                    ("OP_LOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3203 3210])
                    ("OP_BNOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3270 3278])
                    ("OP_BAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3322 3330])
                    ("OP_BOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3373 3380])
                    ("OP_BXOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3424 3432])
                    ("OP_SHL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3475 3482])
                    ("OP_SHR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3526 3534]))                  
                :type "enum")
                nil [1929 3535]))          
      :file "instruction.h"
      :pointmax 3561
      :fsize 3560
      :lastmodtime '(22652 46733 513994 569000)
      :unmatched-syntax nil
      :lexical-table 
        '(("I_ARG_C_POS" . ((semantic-list "(I_ARG_B_POS + I_ARG_B_SIZE)" 719 . 747)))
          ("I_ARG_C_SIZE" . ((number "19" 769 . 771)))
          ("INSTRUCTION_H")
          ("I_OPCODE_SIZE" . ((number "6" 546 . 547)))
          ("instr_set_opcode" (spp-arg-list ("instr" "opcode") 797 . 812) . ((symbol "set_bits" 822 . 830) (semantic-list "(instr, I_OPCODE_POS, I_OPCODE_SIZE, opcode)" 830 . 874)))
          ("instr_set_argA" (spp-arg-list ("instr" "arg") 1157 . 1169) . ((symbol "set_bits" 1176 . 1184) (semantic-list "(instr, I_ARG_A_POS, I_ARG_A_SIZE, arg)" 1184 . 1223)))
          ("instr_get_opcode" (spp-arg-list ("instr") 900 . 907) . ((symbol "get_bits" 908 . 916) (semantic-list "(instr, I_OPCODE_POS, I_OPCODE_SIZE)" 916 . 952)))
          ("instr_set_argB" (spp-arg-list ("instr" "arg") 1338 . 1350) . ((symbol "set_bits" 1357 . 1365) (semantic-list "(instr, I_ARG_B_POS, I_ARG_B_SIZE, arg)" 1365 . 1404)))
          ("instr_set_argC" (spp-arg-list ("instr" "arg") 1519 . 1531) . ((symbol "set_bits" 1538 . 1546) (semantic-list "(instr, I_ARG_C_POS, I_ARG_C_SIZE, arg)" 1546 . 1585)))
          ("I_ARG_B_SIZE" . ((number "19" 695 . 697)))
          ("instr_get_argA" (spp-arg-list ("instr") 1247 . 1254) . ((semantic-list "(get_bits(instr, I_ARG_A_POS, I_ARG_A_SIZE) >> I_ARG_A_POS)" 1255 . 1314)))
          ("I_ARG_A_POS" . ((semantic-list "(I_OPCODE_POS + I_OPCODE_SIZE)" 569 . 599)))
          ("instr_get_argB" (spp-arg-list ("instr") 1428 . 1435) . ((semantic-list "(get_bits(instr, I_ARG_B_POS, I_ARG_B_SIZE) >> I_ARG_B_POS)" 1436 . 1495)))
          ("instr_get_argC" (spp-arg-list ("instr") 1609 . 1616) . ((semantic-list "(get_bits(instr, I_ARG_C_POS, I_ARG_C_SIZE) >> I_ARG_C_POS)" 1617 . 1676)))
          ("I_OPCODE_POS" . ((number "0" 522 . 523)))
          ("I_ARG_A_SIZE" . ((number "19" 621 . 623)))
          ("I_ARG_B_POS" . ((semantic-list "(I_ARG_A_POS + I_ARG_A_SIZE)" 645 . 673)))
          )
))
  :file "!home!wrongway4you!Temp!gsh_old!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

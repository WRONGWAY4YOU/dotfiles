;; Object lexer/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lexer/"
  :tables
  (list
    (semanticdb-table "lex.h"
      :major-mode 'c-mode
      :tags 
        '( ("LEX_H" variable (:constant-flag t) nil [492 497])
            ("lib/xvec.h" include nil nil [499 520])
            ("lex" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [768 791]))                  
                :type ("XVector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [748 792]))          
      :file "lex.h"
      :pointmax 857
      :fsize 856
      :lastmodtime '(22648 63024 960991 348000)
      :unmatched-syntax nil
      :lexical-table 
        '(("LEX_H")
          )
)
    (semanticdb-table "lex.c"
      :major-mode 'c-mode
      :tags 
        '( ("shell/lexer.h" include nil nil [154 178])
            ("ctype.h" include (:system-flag t) nil [180 198])
            ("lib/types.h" include nil nil [200 222])
            ("lib/macros.h" include nil nil [223 246])
            ("lib/buffer.h" include nil nil [247 270])
            ("lib/str_stream.h" include nil nil [271 298])
            ("shell/util.h" include nil nil [299 322])
            ("shell/lexer/token.h" include nil nil [323 353])
            ("shell/object/object.h" include nil nil [354 386])
            ("__BUF_MAX_SIZE" variable (:constant-flag t) nil [396 410])
            ("__get_stream" variable (:constant-flag t) nil [432 444])
            ("__skip" variable (:constant-flag t) nil [481 487])
            ("__read" variable (:constant-flag t) nil [525 531])
            ("__get" variable (:constant-flag t) nil [569 574])
            ("__save" variable (:constant-flag t) nil [601 607])
            ("__clear_buf" variable (:constant-flag t) nil [641 652])
            ("__incr_ln" variable (:constant-flag t) nil [681 690])
            ("__lookahead" variable (:constant-flag t) nil [708 719])
            ("__at_newline" variable (:constant-flag t) nil [762 774])
            ("__at_eof" variable (:constant-flag t) nil [815 823])
            ("__CURR_CH_SHOULD_BE" variable (:constant-flag t) nil [858 877])
            ("__stream" variable
               (:typemodifiers ("static")
                :type ("StringStream" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [993 1029])
            ("__buf" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("Buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1128 1171])
            ("__ln" variable
               (:typemodifiers ("static")
                :type ("uint64" type (:type "class") nil nil))
                nil [1232 1251])
            ("__toks" variable
               (:typemodifiers ("static")
                :type ("XVector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1358 1387])
            ("__prev_tok" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1542 1574])
            ("ch_can_be_start_of_numlit" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("ch" variable (:type "char") (reparse-symbol arg-sub-list) [1692 1700]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1646 1765])
            ("__init_lexer" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1800 1805]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1767 1955])
            ("__append_tok" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("tok" variable
                       (:pointer 1
                        :type ("Token" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1990 2008]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [1957 2065])
            ("__append_tok_keyword" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2100 2122]))                  
                :type "bool")
                nil [2067 3435])
            ("__at_numlit" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3468 3473]))                  
                :type "bool")
                nil [3437 3528])
            ("__at_id" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3557 3562]))                  
                :type "bool")
                nil [3530 3713])
            ("lex_strlit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("is" variable
                       (:pointer 1
                        :type ("InterpreterState" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3898 3926]))                  
                :type "bool")
                nil [3875 4927])
            ("lex_numlit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("is" variable
                       (:pointer 1
                        :type ("InterpreterState" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5084 5112]))                  
                :type "bool")
                nil [5061 5924])
            ("lex_identifier" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6042 6047]))                  
                :type "bool")
                nil [6015 6377])
            ("lex_comment" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("is" variable
                       (:pointer 1
                        :type ("InterpreterState" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6547 6575]))                  
                :type "bool")
                nil [6523 7049])
            ("lex_caret_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7190 7195]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [7164 7429])
            ("lex_pipe_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7574 7579]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [7549 7900])
            ("lex_amp_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8044 8049]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [8020 8371])
            ("lex_gt_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8521 8526]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [8498 8943])
            ("lex_lt_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9093 9098]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [9070 9515])
            ("lex_exclam_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9656 9661]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [9629 9881])
            ("lex_eq_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10018 10023]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [9995 10233])
            ("lex_modulus_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10375 10380]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [10347 10608])
            ("lex_slash_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10748 10753]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [10722 10975])
            ("lex_star_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11127 11132]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [11102 11549])
            ("lex_minus_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11707 11712]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [11681 12229])
            ("lex_plus_ch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [12386 12391]))                  
                :type ("NoRet" type (:type "class") nil nil))
                nil [12361 12903])
            ("lex" function
               (:pointer 1
                :arguments 
                  ( ("is" variable
                       (:pointer 1
                        :type ("InterpreterState" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12930 12958])
                    ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12963 12986]))                  
                :type ("XVector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [12905 14946]))          
      :file "lex.c"
      :pointmax 19641
      :fsize 19640
      :lastmodtime '(22648 63223 746991 302000)
      :unmatched-syntax nil
      :lexical-table 
        '(("__CURR_CH_SHOULD_BE" (spp-arg-list ("ch") 877 . 881) . ((symbol "DEBUG_ASSERT" 882 . 894) (semantic-list "((__get() == ch), \"\")" 894 . 915)))
          ("__BUF_MAX_SIZE" . ((symbol "KILOBYTES" 411 . 420) (semantic-list "(8)" 420 . 423)))
          ("__at_newline" (spp-arg-list nil 774 . 776) . ((symbol "ch_is_newline" 777 . 790) (semantic-list "(*__stream.data)" 790 . 806)))
          ("__get_stream" (spp-arg-list nil 444 . 446) . ((symbol "str_stream_get" 447 . 461) (semantic-list "(&__stream)" 461 . 472)))
          ("__skip" (spp-arg-list nil 487 . 489) . ((symbol "str_stream_skip" 490 . 505) (semantic-list "(&__stream)" 505 . 516)))
          ("__read" (spp-arg-list nil 531 . 533) . ((symbol "str_stream_read" 534 . 549) (semantic-list "(&__stream)" 549 . 560)))
          ("__lookahead" (spp-arg-list nil 719 . 721) . ((symbol "str_stream_lookahead" 722 . 742) (semantic-list "(&__stream)" 742 . 753)))
          ("__save" (spp-arg-list nil 607 . 609) . ((symbol "buf_append" 610 . 620) (semantic-list "(&__buf, ch)" 620 . 632)))
          ("__incr_ln" (spp-arg-list nil 690 . 692) . 
              ((punctuation "+" 693 . 694) (punctuation "+" 694 . 695) (symbol "__ln" 695 . 699)))
          ("__get" (spp-arg-list nil 574 . 576) . 
              ((punctuation "*" 577 . 578) (symbol "__get_stream" 578 . 590) (semantic-list "()" 590 . 592)))
          ("__at_eof" (spp-arg-list nil 823 . 825) . ((semantic-list "(__get() == STR_END_CH)" 826 . 849)))
          ("__clear_buf" (spp-arg-list nil 652 . 654) . ((symbol "buf_clear" 655 . 664) (semantic-list "(&__buf)" 664 . 672)))
          )
)
    (semanticdb-table "token.h"
      :major-mode 'c-mode
      :tags 
        '( ("TOKEN_H" variable (:constant-flag t) nil [216 223])
            ("lib/types.h" include nil nil [225 247])
            ("lib/xvec.h" include nil nil [248 269])
            ("FIRST_RESERVED_TOK" variable (:constant-flag t) nil [279 297])
            ("tok_is_assign_shorthand" variable (:constant-flag t) nil [308 331])
            ("tok_is_id" variable (:constant-flag t) nil [379 388])
            ("tok_is_cmd_separator" variable (:constant-flag t) nil [424 444])
            ("tok_is_paren" variable (:constant-flag t) nil [491 503])
            ("tok_can_be_in_compound_expr" variable (:constant-flag t) nil [542 569])
            ("tok_can_start_compound_expr" variable (:constant-flag t) nil [623 650])
            ("tok_is_unop" variable (:constant-flag t) nil [704 715])
            ("tok_is_binop" variable (:constant-flag t) nil [753 765])
            ("tt_is_op" variable (:constant-flag t) nil [804 812])
            ("tok_is_op" variable (:constant-flag t) nil [870 879])
            ("tok_left_assoc" variable (:constant-flag t) nil [937 951])
            ("tok_preced" variable (:constant-flag t) nil [992 1002])
            ("tt2str" variable (:constant-flag t) nil [1039 1045])
            ("tok2str" variable (:constant-flag t) nil [1076 1083])
            ("print_tok" variable (:constant-flag t) nil [1117 1126])
            ("TokenType" type
               (:members 
                  ( ("TOK_INVALID" variable
                       (:constant-flag t
                        :default-value (1294 1312)
                        :type "int")
                        (reparse-symbol enumsubparts) [1280 1312])
                    ("TOK_NEWLINE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1340 1352])
                    ("TOK_SEMI" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1353 1362])
                    ("TOK_COLON" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1367 1377])
                    ("TOK_COMMA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1378 1388])
                    ("TOK_LBRACKET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1393 1406])
                    ("TOK_RBRACKET" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1407 1420])
                    ("TOK_LPAREN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1425 1436])
                    ("TOK_RPAREN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1437 1448])
                    ("TOK_LBRACE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1453 1464])
                    ("TOK_RBRACE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1465 1476])
                    ("TOK_UNARY_PLUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1508 1523])
                    ("TOK_UNARY_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1524 1540])
                    ("TOK_LOGICAL_NOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1545 1561])
                    ("TOK_BITWISE_NOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1562 1578])
                    ("TOK_INCR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1583 1592])
                    ("TOK_DECR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1593 1602])
                    ("TOK_BINARY_PLUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1635 1651])
                    ("TOK_BINARY_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1652 1669])
                    ("TOK_STAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1674 1683])
                    ("TOK_SLASH" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1684 1694])
                    ("TOK_MODULUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1699 1711])
                    ("TOK_POW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1712 1720])
                    ("TOK_EQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1725 1732])
                    ("TOK_NEQ" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1733 1741])
                    ("TOK_LT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1746 1753])
                    ("TOK_GT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1754 1761])
                    ("TOK_LTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1766 1774])
                    ("TOK_GTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1775 1783])
                    ("TOK_LOGICAL_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1788 1804])
                    ("TOK_LOGICAL_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1805 1820])
                    ("TOK_BITWISE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1825 1841])
                    ("TOK_BITWISE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1842 1857])
                    ("TOK_BITWISE_XOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1862 1878])
                    ("TOK_BITWISE_LS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1883 1898])
                    ("TOK_BITWISE_RS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1899 1914])
                    ("TOK_ASSIGN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1919 1930])
                    ("TOK_ASSIGN_PLUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1935 1951])
                    ("TOK_ASSIGN_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1952 1969])
                    ("TOK_ASSIGN_STAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1974 1990])
                    ("TOK_ASSIGN_SLASH" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1991 2008])
                    ("TOK_ASSIGN_MODULUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2013 2032])
                    ("TOK_ASSIGN_POW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2033 2048])
                    ("TOK_ASSIGN_BITWISE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2053 2076])
                    ("TOK_ASSIGN_BITWISE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2077 2099])
                    ("TOK_ASSIGN_BITWISE_XOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2104 2127])
                    ("TOK_ASSIGN_BITWISE_LS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2132 2154])
                    ("TOK_ASSIGN_BITWISE_RS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2155 2177])
                    ("TOK_KEYWORD_VAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2202 2218])
                    ("TOK_KEYWORD_IF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2219 2234])
                    ("TOK_KEYWORD_ELIF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2239 2256])
                    ("TOK_KEYWORD_ELSE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2257 2274])
                    ("TOK_KEYWORD_WHILE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2279 2297])
                    ("TOK_KEYWORD_FOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2298 2314])
                    ("TOK_KEYWORD_FUNC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2319 2336])
                    ("TOK_KEYWORD_TRUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2341 2358])
                    ("TOK_KEYWORD_FALSE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2359 2377])
                    ("TOK_KEYWORD_IMPORT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2382 2401])
                    ("TOK_INUMLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2429 2441])
                    ("TOK_DNUMLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2442 2454])
                    ("TOK_STRLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2459 2470])
                    ("TOK_ID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2471 2479]))                  
                :type "enum")
                nil [1241 2480])
            ("LAST_RESERVED_TOK" variable (:constant-flag t) nil [2490 2507])
            ("RESERVED_TOKENS_COUNT" variable (:constant-flag t) nil [2535 2556])
            ("TokenData" type
               (:members 
                  ( ("str" variable
                       (:pointer 1
                        :type ("GShObject" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2815 2837])
                    ("inum" variable
                       (:pointer 1
                        :type ("GShObject" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2842 2865])
                    ("dnum" variable
                       (:pointer 1
                        :type ("GShObject" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2870 2893]))                  
                :type "union")
                nil [2793 2896])
            ("Token" type
               (:members 
                  ( ("data" variable (:type ("TokenData" type (:type "union") nil nil)) (reparse-symbol classsubparts) [3067 3088])
                    ("type" variable (:type ("TokenType" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [3093 3113]))                  
                :type "struct")
                nil [3048 3116])
            ("RESERVED_TOKENS" variable
               (:dereference 1
                :typemodifiers ("extern")
                :constant-flag t
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3192 3236])
            ("TOK_STR" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("extern")
                :constant-flag t
                :type "char")
                nil [3334 3369])
            ("tok_new" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3393 3419]))                  
                :type ("Token" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3371 3420])
            ("tt_can_be_in_compound_expr" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3453 3479]))                  
                :type "bool")
                nil [3421 3480])
            ("tt_can_start_compound_expr" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3513 3539]))                  
                :type "bool")
                nil [3481 3540])
            ("tt_is_id" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3555 3581]))                  
                :type "bool")
                nil [3541 3582])
            ("tt_is_cmd_separator" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3608 3634]))                  
                :type "bool")
                nil [3583 3635])
            ("tt_is_paren" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3653 3679]))                  
                :type "bool")
                nil [3636 3680])
            ("tt_is_unop" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3697 3723]))                  
                :type "bool")
                nil [3681 3724])
            ("tt_is_binop" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3742 3768]))                  
                :type "bool")
                nil [3725 3769])
            ("tt_left_assoc" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3789 3815]))                  
                :type "bool")
                nil [3770 3816])
            ("tt_preced" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable
                       (:constant-flag t
                        :type ("TokenType" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [3833 3859]))                  
                :type ("uint8" type (:type "class") nil nil))
                nil [3817 3860]))          
      :file "token.h"
      :pointmax 3880
      :fsize 3879
      :lastmodtime '(22648 62819 912991 396000)
      :unmatched-syntax nil
      :lexical-table 
        '(("tok_is_op" (spp-arg-list ("tok") 879 . 884) . ((semantic-list "(tok_is_unop((tok)) || tok_is_binop((tok)))" 885 . 928)))
          ("tt2str" (spp-arg-list ("type") 1045 . 1051) . ((symbol "TOK_STR" 1052 . 1059) (semantic-list "[(type)]" 1059 . 1067)))
          ("tok_is_assign_shorthand" (spp-arg-list ("tok") 331 . 336) . ((symbol "tt_is_assign_shorthand" 337 . 359) (semantic-list "(tok->type)" 359 . 370)))
          ("TOKEN_H")
          ("tok_is_unop" (spp-arg-list ("tok") 715 . 720) . ((symbol "tt_is_unop" 721 . 731) (semantic-list "((tok)->type)" 731 . 744)))
          ("print_tok" (spp-arg-list ("tok") 1126 . 1131) . ((symbol "PRINT_STDOUT" 1132 . 1144) (semantic-list "(tt2str((tok)->type) LF_CH)" 1144 . 1171)))
          ("tok_can_be_in_compound_expr" (spp-arg-list ("tok") 569 . 574) . ((symbol "tt_can_be_in_compound_expr" 575 . 601) (semantic-list "((tok)->type)" 601 . 614)))
          ("tok2str" (spp-arg-list ("tok") 1083 . 1088) . ((symbol "tt2str" 1089 . 1095) (semantic-list "((tok)->type)" 1095 . 1108)))
          ("RESERVED_TOKENS_COUNT" . 
              ((symbol "LAST_RESERVED_TOK" 2557 . 2574) (punctuation "-" 2575 . 2576) (symbol "FIRST_RESERVED_TOK" 2577 . 2595)))
          ("tt_is_op" (spp-arg-list ("type") 812 . 818) . 
              ((open-paren "(" 819 . 820) (symbol "tt_is_unop" 820 . 830) (semantic-list "((type))" 830 . 838) (punctuation "|" 839 . 840) (punctuation "|" 840 . 841) (symbol "tt_is_binop" 842 . 853) (semantic-list "((type))" 853 . 861)))
          ("tok_is_id" (spp-arg-list ("tok") 388 . 393) . ((symbol "tt_is_id" 394 . 402) (semantic-list "((tok)->type)" 402 . 415)))
          ("tok_can_start_compound_expr" (spp-arg-list ("tok") 650 . 655) . ((symbol "tt_can_start_compound_expr" 656 . 682) (semantic-list "((tok)->type)" 682 . 695)))
          ("LAST_RESERVED_TOK" . ((symbol "TOK_KEYWORD_IMPORT" 2508 . 2526)))
          ("FIRST_RESERVED_TOK" . ((number "0" 298 . 299)))
          ("tok_is_paren" (spp-arg-list ("tok") 503 . 508) . ((symbol "tt_is_paren" 509 . 520) (semantic-list "((tok)->type)" 520 . 533)))
          ("tok_is_binop" (spp-arg-list ("tok") 765 . 770) . ((symbol "tt_is_binop" 771 . 782) (semantic-list "((tok)->type)" 782 . 795)))
          ("tok_left_assoc" (spp-arg-list ("tok") 951 . 956) . ((symbol "tt_left_assoc" 957 . 970) (semantic-list "((tok)->type)" 970 . 983)))
          ("tok_is_cmd_separator" (spp-arg-list ("tok") 444 . 449) . ((symbol "tt_is_cmd_separator" 450 . 469) (semantic-list "((tok)->type)" 469 . 482)))
          ("tok_preced" (spp-arg-list ("tok") 1002 . 1007) . ((symbol "tt_preced" 1008 . 1017) (semantic-list "((tok)->type)" 1017 . 1030)))
          )
)
    (semanticdb-table "token.c"
      :major-mode 'c-mode
      :tags nil
      :file "token.c"
      :pointmax 0
      :fsize 6503
      :lastmodtime '(22648 62890 393991 379000)
      :unmatched-syntax nil))
  :file "!home!wrongway4you!Projects!gsh!src!shell!interpreter!lexer!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

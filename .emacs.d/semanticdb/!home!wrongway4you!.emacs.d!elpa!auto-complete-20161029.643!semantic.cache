;; Object auto-complete-20161029.643/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete-20161029.643/"
  :tables
  (list
    (semanticdb-table "auto-complete-autoloads.el"
      :major-mode 'emacs-lisp-mode
      :tags nil
      :file "auto-complete-autoloads.el"
      :pointmax 299
      :fsize 1857
      :lastmodtime '(22618 16943 889605 959000)
      :unmatched-syntax nil)
    (semanticdb-table "auto-complete-config.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [892 909])
            ("auto-complete" include nil nil [910 934])
            ("declare-function" code nil nil [936 1006])
            ("declare-function" code nil nil [1007 1059])
            ("declare-function" code nil nil [1060 1125])
            ("declare-function" code nil nil [1126 1187])
            ("declare-function" code nil nil [1188 1249])
            ("declare-function" code nil nil [1250 1299])
            ("declare-function" code nil nil [1300 1342])
            ("ac-imenu-index" variable nil nil [1382 1409])
            ("ac-clear-variable-every-10-minutes" code nil nil [1411 1463])
            ("ac-imenu-candidates" function nil nil [1465 2788])
            ("ac-define-source" code nil nil [2790 2893])
            ("ac-gtags-candidate-face" variable
               (:default-value (quote ((t (:inherit ac-candidate-face :foreground "navy"))))
                :type "face")
                nil [2905 3048])
            ("ac-gtags-selection-face" variable
               (:default-value (quote ((t (:inherit ac-selection-face :background "navy"))))
                :type "face")
                nil [3050 3207])
            ("ac-gtags-candidate" function nil nil [3209 3342])
            ("ac-define-source" code nil nil [3344 3539])
            ("ac-yasnippet-candidate-face" variable
               (:default-value (quote ((t (:inherit ac-candidate-face :background "sandybrown" :foreground "black"))))
                :type "face")
                nil [3555 3750])
            ("ac-yasnippet-selection-face" variable
               (:default-value (quote ((t (:inherit ac-selection-face :background "coral3"))))
                :type "face")
                nil [3752 3919])
            ("ac-yasnippet-table-hash" function (:arguments ("table")) nil [3921 4101])
            ("ac-yasnippet-table-parent" function (:arguments ("table")) nil [4103 4293])
            ("ac-yasnippet-candidate-1" function (:arguments ("table")) nil [4295 4790])
            ("ac-yasnippet-candidates" function nil nil [4792 5695])
            ("ac-define-source" code nil nil [5697 5940])
            ("ac-semantic-candidates" function (:arguments ("prefix")) nil [5955 6464])
            ("ac-semantic-doc" function (:arguments ("symbol")) nil [6466 6745])
            ("ac-semantic-action" function nil nil [6747 7627])
            ("ac-define-source" code nil nil [7629 7943])
            ("ac-define-source" code nil nil [7945 8219])
            ("ac-eclim-candidates" function nil nil [8231 8358])
            ("ac-define-source" code nil nil [8360 8483])
            ("ac-css-property-alist" variable
               (:constant-flag t
                :default-value (quote (("azimuth" angle "left-side" "far-left" "left" "center-left" "center" "center-right" "right" "far-right" "right-side" "behind" "leftwards" "rightwards") ("background" background-color background-image background-repeat background-attachment background-position) ("background-attachment" "scroll" "fixed") ("background-color" color "transparent") ("background-image" uri "none") ("background-position" percentage length "left" "center" "right" percentage length "top" "center" "bottom" "left" "center" "right" "top" "center" "bottom") ("background-repeat" "repeat" "repeat-x" "repeat-y" "no-repeat") ("border" border-width border-style border-color) ("border-bottom" border) ("border-bottom-color" border-color) ("border-bottom-style" border-style) ("border-bottom-width" border-width) ("border-collapse" "collapse" "separate") ("border-color" color "transparent") ("border-left" border) ("border-left-color" border-color) ("border-left-style" border-style) ("border-left-width" border-width) ("border-right" border) ("border-right-color" border-color) ("border-right-style" border-style) ("border-right-width" border-width) ("border-spacing" length length) ("border-style" border-style) ("border-top" border) ("border-top-color" border-color) ("border-top-style" border-style) ("border-top-width" border-width) ("border-width" border-width) ("bottom" length percentage "auto") ("caption-side" "top" "bottom") ("clear" "none" "left" "right" "both") ("clip" shape "auto") ("color" color) ("content" "normal" "none" string uri counter "attr()" "open-quote" "close-quote" "no-open-quote" "no-close-quote") ("counter-increment" identifier integer "none") ("counter-reset" identifier integer "none") ("cue" cue-before cue-after) ("cue-after" uri "none") ("cue-before" uri "none") ("cursor" uri "*" "auto" "crosshair" "default" "pointer" "move" "e-resize" "ne-resize" "nw-resize" "n-resize" "se-resize" "sw-resize" "s-resize" "w-resize" "text" "wait" "help" "progress") ("direction" "ltr" "rtl") ("display" "inline" "block" "list-item" "run-in" "inline-block" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none") ("elevation" angle "below" "level" "above" "higher" "lower") ("empty-cells" "show" "hide") ("float" "left" "right" "none") ("font" font-style font-variant font-weight font-size "/" line-height font-family "caption" "icon" "menu" "message-box" "small-caption" "status-bar") ("font-family" family-name generic-family) ("font-size" absolute-size relative-size length percentage) ("font-style" "normal" "italic" "oblique") ("font-variant" "normal" "small-caps") ("font-weight" "normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900") ("height" length percentage "auto") ("left" length percentage "auto") ("letter-spacing" "normal" length) ("line-height" "normal" number length percentage) ("list-style" list-style-type list-style-position list-style-image) ("list-style-image" uri "none") ("list-style-position" "inside" "outside") ("list-style-type" "disc" "circle" "square" "decimal" "decimal-leading-zero" "lower-roman" "upper-roman" "lower-greek" "lower-latin" "upper-latin" "armenian" "georgian" "lower-alpha" "upper-alpha" "none") ("margin" margin-width) ("margin-bottom" margin-width) ("margin-left" margin-width) ("margin-right" margin-width) ("margin-top" margin-width) ("max-height" length percentage "none") ("max-width" length percentage "none") ("min-height" length percentage) ("min-width" length percentage) ("orphans" integer) ("outline" outline-color outline-style outline-width) ("outline-color" color "invert") ("outline-style" border-style) ("outline-width" border-width) ("overflow" "visible" "hidden" "scroll" "auto") ("padding" padding-width) ("padding-bottom" padding-width) ("padding-left" padding-width) ("padding-right" padding-width) ("padding-top" padding-width) ("page-break-after" "auto" "always" "avoid" "left" "right") ("page-break-before" "auto" "always" "avoid" "left" "right") ("page-break-inside" "avoid" "auto") ("pause" time percentage) ("pause-after" time percentage) ("pause-before" time percentage) ("pitch" frequency "x-low" "low" "medium" "high" "x-high") ("pitch-range" number) ("play-during" uri "mix" "repeat" "auto" "none") ("position" "static" "relative" "absolute" "fixed") ("quotes" string string "none") ("richness" number) ("right" length percentage "auto") ("speak" "normal" "none" "spell-out") ("speak-header" "once" "always") ("speak-numeral" "digits" "continuous") ("speak-punctuation" "code" "none") ("speech-rate" number "x-slow" "slow" "medium" "fast" "x-fast" "faster" "slower") ("stress" number) ("table-layout" "auto" "fixed") ("text-align" "left" "right" "center" "justify") ("text-decoration" "none" "underline" "overline" "line-through" "blink") ("text-indent" length percentage) ("text-transform" "capitalize" "uppercase" "lowercase" "none") ("top" length percentage "auto") ("unicode-bidi" "normal" "embed" "bidi-override") ("vertical-align" "baseline" "sub" "super" "top" "text-top" "middle" "bottom" "text-bottom" percentage length) ("visibility" "visible" "hidden" "collapse") ("voice-family" specific-voice generic-voice "*" specific-voice generic-voice) ("volume" number percentage "silent" "x-soft" "soft" "medium" "loud" "x-loud") ("white-space" "normal" "pre" "nowrap" "pre-wrap" "pre-line") ("widows" integer) ("width" length percentage "auto") ("word-spacing" "normal" length) ("z-index" "auto" integer))))
                nil [8523 14753])
            ("ac-css-value-classes" variable
               (:constant-flag t
                :default-value (quote ((absolute-size "xx-small" "x-small" "small" "medium" "large" "x-large" "xx-large") (border-style "none" "hidden" "dotted" "dashed" "solid" "double" "groove" "ridge" "inset" "outset") (color "aqua" "black" "blue" "fuchsia" "gray" "green" "lime" "maroon" "navy" "olive" "orange" "purple" "red" "silver" "teal" "white" "yellow" "rgb") (counter "counter") (family-name "Courier" "Helvetica" "Times") (generic-family "serif" "sans-serif" "cursive" "fantasy" "monospace") (generic-voice "male" "female" "child") (margin-width "auto") (relative-size "larger" "smaller") (shape "rect") (uri "url"))))
                nil [14755 15562])
            ("ac-css-pseudo-classes" variable
               (:constant-flag t
                :default-value (quote ("active" "after" "before" "first" "first-child" "first-letter" "first-line" "focus" "hover" "lang" "left" "link" "right" "visited")))
                nil [15564 15796])
            ("ac-css-property" variable nil nil [15798 15856])
            ("ac-css-prefix" function nil nil [15858 16049])
            ("ac-css-property-candidates" function nil nil [16051 16721])
            ("ac-define-source" code nil nil [16723 16849])
            ("ac-define-source" code nil nil [16860 16998])
            ("ac-define-source" code nil nil [17011 17137])
            ("ac-ropemacs-loaded" variable nil nil [17184 17215])
            ("ac-ropemacs-require" function nil nil [17216 17466])
            ("ac-ropemacs-setup" function nil nil [17468 17654])
            ("ac-ropemacs-initialize" function nil nil [17656 17937])
            ("ac-ropemacs-completions-cache" variable nil nil [17939 17981])
            ("ac-source-ropemacs" variable (:default-value (quote ((init lambda nil (setq ac-ropemacs-completions-cache (mapcar (lambda (completion) (concat ac-prefix completion)) (ignore-errors (rope-completions))))) (candidates . ac-ropemacs-completions-cache)))) nil [17982 18314])
            ("ac-source-rcodetools" variable (:default-value (quote ((init lambda nil (require (quote rcodetools)) (condition-case x (save-excursion (rct-exec-and-eval rct-complete-command-name "--completion-emacs-icicles")) (error) (setq rct-method-completion-table nil))) (candidates lambda nil (all-completions ac-prefix (mapcar (lambda (completion) (replace-regexp-in-string "	.*$" "" (car completion))) rct-method-completion-table)))))) nil [18331 18951])
            ("ac-common-setup" function nil nil [18979 19057])
            ("ac-emacs-lisp-mode-setup" function nil nil [19059 19234])
            ("ac-cc-mode-setup" function nil nil [19236 19342])
            ("ac-ruby-mode-setup" function nil nil [19344 19373])
            ("ac-css-mode-setup" function nil nil [19375 19469])
            ("ac-config-default" function nil nil [19486 19915])
            ("auto-complete-config" package nil nil [19917 19948]))          
      :file "auto-complete-config.el"
      :pointmax 19987
      :fsize 19986
      :lastmodtime '(22618 16943 768605 970000)
      :unmatched-syntax nil)
    (semanticdb-table "auto-complete.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("ac-version" variable
               (:constant-flag t
                :default-value "1.5.1")
                nil [1379 1503])
            ("ac-version-major" variable
               (:constant-flag t
                :default-value (car (version-to-list ac-version)))
                nil [1505 1609])
            ("ac-version-minor" variable
               (:constant-flag t
                :default-value (cadr (version-to-list ac-version)))
                nil [1611 1716])
            ("cl-lib" include nil nil [1718 1735])
            ("popup" include nil nil [1736 1752])
            ("ac-error" function (:arguments ("var")) nil [1773 1957])
            ("auto-complete" customgroup (:user-visible-flag t) nil [1982 2068])
            ("ac-delay" variable (:default-value 0.1) nil [2070 2177])
            ("ac-auto-show-menu" variable (:default-value 0.8) nil [2179 2418])
            ("ac-show-menu-immediately-on-auto-complete" variable (:default-value t) nil [2420 2586])
            ("ac-expand-on-auto-complete" variable (:default-value t) nil [2588 2743])
            ("ac-disable-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-face))) nil [2745 2956])
            ("ac-stop-flymake-on-completing" variable (:default-value t) nil [2958 3102])
            ("ac-flycheck-poll-completion-end-interval" variable (:default-value 0.5) nil [3104 3290])
            ("ac-use-fuzzy" variable (:default-value (and (locate-library "fuzzy") t)) nil [3292 3428])
            ("ac-fuzzy-cursor-color" variable (:default-value "red") nil [3430 3541])
            ("ac-use-comphist" variable (:default-value t) nil [3543 3667])
            ("ac-comphist-threshold" variable (:default-value 0.7) nil [3669 3795])
            ("ac-comphist-file" variable (:default-value (expand-file-name (concat (if (boundp (quote user-emacs-directory)) user-emacs-directory "~/.emacs.d/") "/ac-comphist.dat"))) nil [3797 4109])
            ("ac-user-dictionary" variable nil nil [4111 4222])
            ("ac-dictionary-files" variable (:default-value (quote ("~/.dict"))) nil [4224 4339])
            ("defvaralias" code nil nil [4340 4400])
            ("ac-dictionary-directories" variable (:default-value (ignore-errors (when load-file-name (let ((installed-dir (file-name-directory load-file-name))) (cl-loop for name in (quote ("ac-dict" "dict")) for dir = (concat installed-dir name) if (file-directory-p dir) collect dir))))) nil [4402 4795])
            ("ac-use-quick-help" variable (:default-value t) nil [4797 4903])
            ("ac-quick-help-delay" variable (:default-value 1.5) nil [4905 5009])
            ("ac-menu-height" variable (:default-value 10) nil [5011 5115])
            ("defvaralias" code nil nil [5116 5171])
            ("ac-quick-help-height" variable (:default-value 20) nil [5173 5279])
            ("ac-quick-help-prefer-pos-tip" variable (:default-value t) nil [5281 5449])
            ("defvaralias" code nil nil [5450 5517])
            ("ac-candidate-limit" variable nil nil [5519 5654])
            ("defvaralias" code nil nil [5655 5706])
            ("ac-modes" variable (:default-value (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode nim-mode c-mode cc-mode c++-mode objc-mode swift-mode go-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode tcl-mode ecmascript-mode javascript-mode js-mode js-jsx-mode js2-mode js2-jsx-mode coffee-mode php-mode css-mode scss-mode less-css-mode elixir-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode web-mode ts-mode sclang-mode verilog-mode qml-mode apples-mode))) nil [5708 6502])
            ("ac-compatible-packages-regexp" variable (:default-value "^ac-") nil [6504 6660])
            ("ac-non-trigger-commands" variable (:default-value (quote (*table--cell-self-insert-command electric-buffer-list))) nil [6662 6873])
            ("ac-trigger-commands" variable (:default-value (quote (self-insert-command))) nil [6875 7059])
            ("ac-trigger-commands-on-completing" variable (:default-value (quote (delete-backward-char backward-delete-char backward-delete-char-untabify autopair-backspace paredit-backward-delete paredit-backward-delete-word))) nil [7061 7437])
            ("ac-trigger-key" variable nil nil [7439 7972])
            ("ac-auto-start" variable (:default-value 2) nil [7974 8387])
            ("ac-stop-words" variable nil nil [8389 8506])
            ("defvaralias" code nil nil [8507 8547])
            ("ac-use-dictionary-as-stop-words" variable (:default-value t) nil [8549 8715])
            ("ac-ignore-case" variable (:default-value (quote smart)) nil [8717 9054])
            ("ac-dwim" variable (:default-value t) nil [9056 9183])
            ("ac-use-menu-map" variable nil nil [9185 9339])
            ("ac-use-overriding-local-map" variable nil nil [9341 9533])
            ("ac-disable-inline" variable nil nil [9535 9658])
            ("ac-candidate-menu-min" variable (:default-value 1) nil [9660 9786])
            ("ac-max-width" variable nil nil [9788 10041])
            ("ac-completion-face" variable
               (:default-value (quote ((t (:foreground "darkgray" :underline t))))
                :type "face")
                nil [10043 10173])
            ("ac-candidate-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [10175 10281])
            ("ac-candidate-mouse-face" variable
               (:default-value (quote ((t (:inherit popup-menu-mouse-face))))
                :type "face")
                nil [10283 10412])
            ("ac-selection-face" variable
               (:default-value (quote ((t (:inherit popup-menu-selection-face))))
                :type "face")
                nil [10414 10544])
            ("auto-complete-mode-hook" variable nil nil [10546 10617])
            ("auto-complete-mode" variable nil nil [10647 10728])
            ("ac-cursor-color" variable nil nil [10730 10780])
            ("ac-inline" variable nil nil [10782 10836])
            ("ac-menu" variable nil nil [10838 10877])
            ("ac-show-menu" variable nil nil [10879 10941])
            ("ac-last-completion" variable nil nil [10943 11038])
            ("ac-quick-help" variable nil nil [11040 11090])
            ("ac-completing" variable nil nil [11092 11187])
            ("ac-buffer" variable nil nil [11189 11254])
            ("ac-point" variable nil nil [11256 11304])
            ("ac-last-point" variable nil nil [11306 11368])
            ("ac-prefix" variable nil nil [11370 11411])
            ("defvaralias" code nil nil [11412 11447])
            ("ac-selected-candidate" variable nil nil [11449 11512])
            ("ac-common-part" variable nil nil [11514 11636])
            ("ac-whole-common-part" variable nil nil [11638 11761])
            ("ac-prefix-overlay" variable nil nil [11763 11824])
            ("ac-timer" variable nil nil [11826 11874])
            ("ac-show-menu-timer" variable nil nil [11876 11933])
            ("ac-quick-help-timer" variable nil nil [11935 11994])
            ("ac-triggered" variable nil nil [11996 12041])
            ("ac-limit" variable nil nil [12043 12113])
            ("ac-candidates" variable nil nil [12115 12165])
            ("ac-candidates-cache" variable nil nil [12167 12244])
            ("ac-fuzzy-enable" variable nil nil [12246 12319])
            ("ac-dwim-enable" variable nil nil [12321 12399])
            ("ac-mode-map" variable (:default-value (make-sparse-keymap)) nil [12401 12538])
            ("ac-completing-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ac-expand)) (define-key map [tab] (quote ac-expand)) (define-key map "" (quote ac-complete)) (define-key map (kbd "M-TAB") (quote auto-complete)) (define-key map "\356" (quote ac-next)) (define-key map "\360" (quote ac-previous)) (define-key map [down] (quote ac-next)) (define-key map [up] (quote ac-previous)) (define-key map [f1] (quote ac-help)) (define-key map [M-f1] (quote ac-persist-help)) (define-key map (kbd "C-?") (quote ac-help)) (define-key map (kbd "C-M-?") (quote ac-persist-help)) (define-key map [C-down] (quote ac-quick-help-scroll-down)) (define-key map [C-up] (quote ac-quick-help-scroll-up)) (define-key map "\216" (quote ac-quick-help-scroll-down)) (define-key map "\220" (quote ac-quick-help-scroll-up)) (dotimes (i 9) (let ((symbol (intern (format "ac-complete-select-%d" (1+ i))))) (fset symbol (\` (lambda nil (interactive) (when (and (ac-menu-live-p) (popup-select ac-menu (\, i))) (ac-complete))))) (define-key map (read-kbd-macro (format "M-%s" (1+ i))) symbol))) map)) nil [12540 13709])
            ("defvaralias" code nil nil [13710 13764])
            ("ac-menu-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) (define-key map (kbd "RET") (quote ac-complete)) (define-key map "" (quote ac-next)) (define-key map "" (quote ac-previous)) (define-key map "" (quote ac-isearch)) (define-key map [mouse-1] (quote ac-mouse-1)) (define-key map [down-mouse-1] (quote ac-ignore)) (define-key map [mouse-4] (quote ac-mouse-4)) (define-key map [mouse-5] (quote ac-mouse-5)) map)) nil [13766 14263])
            ("ac-current-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) map)) nil [14265 14379])
            ("ac-match-function" variable (:default-value (quote all-completions)) nil [14381 14452])
            ("ac-prefix-definitions" variable (:default-value (quote ((symbol . ac-prefix-symbol) (file . ac-prefix-file) (valid-file . ac-prefix-valid-file) (c-dot . ac-prefix-c-dot) (c-dot-ref . ac-prefix-c-dot-ref) (cc-member . ac-prefix-cc-member)))) nil [14454 14730])
            ("ac-sources" variable (:default-value (quote (ac-source-words-in-same-mode-buffers))) nil [14732 14819])
            ("make-variable-buffer-local" code nil nil [14820 14860])
            ("ac-compiled-sources" variable nil nil [14862 14931])
            ("ac-current-sources" variable nil nil [14933 15035])
            ("ac-omni-completion-sources" variable nil nil [15037 15105])
            ("ac-current-prefix-def" variable nil nil [15107 15141])
            ("ac-ignoring-prefix-def" variable nil nil [15143 15178])
            ("ac-comphist" variable nil nil [15220 15280])
            ("ac-comphist-make-tab" function nil nil [15282 15349])
            ("ac-comphist-tab" function (:arguments ("db")) nil [15351 15395])
            ("ac-comphist-cache" function (:arguments ("db")) nil [15397 15443])
            ("ac-comphist-make" function (:arguments ("tab")) nil [15445 15569])
            ("ac-comphist-get" function (:arguments ("db" "string" "create")) nil [15571 15830])
            ("ac-comphist-add" function (:arguments ("db" "string" "prefix")) nil [15832 16128])
            ("ac-comphist-score" function (:arguments ("db" "string" "prefix")) nil [16130 17288])
            ("ac-comphist-sort" function (:arguments ("db" "collection" "prefix" "threshold")) nil [17290 18211])
            ("ac-comphist-serialize" function (:arguments ("db")) nil [18213 18382])
            ("ac-comphist-deserialize" function (:arguments ("sexp")) nil [18384 18750])
            ("ac-comphist-init" function nil nil [18752 18848])
            ("ac-comphist-load" function nil nil [18850 19239])
            ("ac-comphist-save" function nil nil [19241 19467])
            ("ac-buffer-dictionary" variable nil nil [19488 19521])
            ("ac-file-dictionary" variable (:default-value (make-hash-table :test (quote equal))) nil [19522 19580])
            ("ac-clear-dictionary-cache" function nil nil [19582 19838])
            ("ac-file-dictionary" function (:arguments ("filename")) nil [19840 20247])
            ("ac-mode-dictionary" function (:arguments ("mode")) nil [20249 20637])
            ("ac-buffer-dictionary" function (:arguments ("buffer")) nil [20639 21087])
            ("ac-menu-at-wrapper-line-p" function nil nil [21124 21403])
            ("ac-stop-word-p" function (:arguments ("word")) nil [21405 21559])
            ("ac-prefix-default" function nil nil [21561 21887])
            ("ac-prefix-symbol" function nil nil [21889 22027])
            ("ac-prefix-file" function nil nil [22029 22159])
            ("ac-windows-remote-file-p" function (:arguments ("file")) nil [22161 22314])
            ("ac-prefix-valid-file" function nil nil [22316 22975])
            ("ac-prefix-c-dot" function nil nil [22977 23147])
            ("ac-prefix-c-dot-ref" function nil nil [23149 23354])
            ("ac-prefix-cc-member" function nil nil [23356 23559])
            ("ac-define-prefix" function (:arguments ("name" "prefix")) nil [23561 23747])
            ("ac-match-substring" function (:arguments ("prefix" "candidates")) nil [23749 23957])
            ("ac-source-entity" function (:arguments ("source")) nil [23959 24058])
            ("ac-source-available-p" function (:arguments ("source")) nil [24060 24970])
            ("ac-compile-sources" function (:arguments ("sources")) nil [24972 25764])
            ("ac-compiled-sources" function nil nil [25766 25900])
            ("ac-menu-live-p" function nil nil [25902 25955])
            ("ac-menu-create" function (:arguments ("point" "width" "height")) nil [25957 26470])
            ("ac-menu-delete" function nil nil [26472 26564])
            ("ac-inline-overlay" function nil nil [26566 26617])
            ("ac-inline-live-p" function nil nil [26619 26689])
            ("ac-inline-show" function (:arguments ("point" "string")) nil [26691 28624])
            ("ac-inline-delete" function nil nil [28626 28768])
            ("ac-inline-hide" function nil nil [28770 29106])
            ("ac-inline-update" function nil nil [29108 29536])
            ("ac-put-prefix-overlay" function nil nil [29538 30044])
            ("ac-remove-prefix-overlay" function nil nil [30046 30361])
            ("ac-activate-completing-map" function nil nil [30363 30750])
            ("ac-deactivate-completing-map" function nil nil [30752 31092])
            ("ac-selected-candidate" function nil nil [31094 31180])
            ("ac-prefix" function (:arguments ("requires" "ignore-list")) nil [31182 32998])
            ("ac-init" function nil nil [33000 33397])
            ("ac-candidates-1" function (:arguments ("source")) nil [33399 35633])
            ("ac-delete-duplicated-candidates" function (:arguments ("candidates")) nil [35635 36016])
            ("ac-reduce-candidates" function (:arguments ("candidates")) nil [36018 36533])
            ("ac-candidates" function nil nil [36535 38456])
            ("ac-update-candidates" function (:arguments ("cursor" "scroll-top")) nil [38458 39142])
            ("ac-reposition" function nil nil [39144 39504])
            ("ac-cleanup" function nil nil [39506 40959])
            ("ac-abort" function nil nil [40961 41020])
            ("ac-extend-region-to-delete" function (:arguments ("string")) nil [41022 41759])
            ("ac-expand-string" function (:arguments ("string" "remove-undo-boundary")) nil [41761 43314])
            ("ac-set-trigger-key" function (:arguments ("key")) nil [43316 43700])
            ("ac-set-timer" function nil nil [43702 43823])
            ("ac-cancel-timer" function nil nil [43825 43930])
            ("ac-update" function (:arguments ("force")) nil [43932 44764])
            ("ac-update-greedy" function (:arguments ("force")) nil [44766 45082])
            ("ac-set-show-menu-timer" function nil nil [45084 45334])
            ("ac-cancel-show-menu-timer" function nil nil [45336 45481])
            ("ac-show-menu" function nil nil [45483 45633])
            ("ac-help" function (:arguments ("persist")) nil [45635 45750])
            ("ac-persist-help" function nil nil [45752 45808])
            ("ac-last-help" function (:arguments ("persist")) nil [45810 45958])
            ("ac-last-persist-help" function nil nil [45960 46026])
            ("ac-set-quick-help-timer" function nil nil [46028 46243])
            ("ac-cancel-quick-help-timer" function nil nil [46245 46394])
            ("ac-pos-tip-show-quick-help" function (:arguments ("menu" "item" "args")) nil [46396 47368])
            ("ac-quick-help-use-pos-tip-p" function nil nil [47370 47493])
            ("ac-quick-help" function (:arguments ("force")) nil [47495 48219])
            ("ac-remove-quick-help" function nil nil [48221 48420])
            ("ac-last-quick-help" function nil nil [48422 49020])
            ("ac-define-quick-help-command" function (:arguments ("name" "arglist" "body")) nil [49022 49199])
            ("ac-define-quick-help-command" code nil nil [49201 49337])
            ("ac-define-quick-help-command" code nil nil [49339 49471])
            ("ac-isearch-callback" function (:arguments ("list")) nil [49506 49585])
            ("ac-isearch" function nil nil [49587 50132])
            ("cl-defun" code nil nil [50168 51155])
            ("auto-complete" function
               (:user-visible-flag t
                :arguments ("sources"))
                nil [51172 51310])
            ("ac-fuzzy-complete" function (:user-visible-flag t) nil [51312 51921])
            ("ac-next" function (:user-visible-flag t) nil [51923 52160])
            ("ac-previous" function (:user-visible-flag t) nil [52162 52415])
            ("ac-expand" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [52417 53213])
            ("ac-expand-previous" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [53215 53344])
            ("ac-expand-common" function (:user-visible-flag t) nil [53346 53687])
            ("ac-complete-1" function (:arguments ("candidate")) nil [53689 54299])
            ("ac-complete" function (:user-visible-flag t) nil [54301 54399])
            ("cl-defun" code nil nil [54401 55899])
            ("ac-stop" function (:user-visible-flag t) nil [55901 56004])
            ("ac-ignore" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [56006 56076])
            ("ac-mouse-1" function (:arguments ("event")) nil [56078 56202])
            ("ac-mouse-4" function (:arguments ("event")) nil [56204 56266])
            ("ac-mouse-5" function (:arguments ("event")) nil [56268 56326])
            ("ac-trigger-key-command" function (:arguments ("force")) nil [56328 56608])
            ("ac-clear-variables-every-minute-timer" variable nil nil [56640 56690])
            ("ac-clear-variables-after-save" variable nil nil [56691 56733])
            ("ac-clear-variables-every-minute" variable nil nil [56734 56778])
            ("ac-minutes-counter" variable nil nil [56779 56808])
            ("ac-clear-variable-after-save" function (:arguments ("variable" "pred")) nil [56810 56940])
            ("ac-clear-variables-after-save" function nil nil [56942 57124])
            ("ac-clear-variable-every-minutes" function (:arguments ("variable" "minutes")) nil [57126 57257])
            ("ac-clear-variable-every-minute" function (:arguments ("variable")) nil [57259 57355])
            ("ac-clear-variable-every-10-minutes" function (:arguments ("variable")) nil [57357 57458])
            ("ac-clear-variables-every-minute" function nil nil [57460 57662])
            ("ac-cursor-on-diable-face-p" function (:arguments ("point")) nil [57692 57815])
            ("ac-trigger-command-p" function (:arguments ("command")) nil [57817 58163])
            ("ac-fallback-key-sequence" function nil nil [58165 58349])
            ("ac-fallback-command" function (:arguments ("except-command")) nil [58351 58687])
            ("ac-compatible-package-command-p" function (:arguments ("command")) nil [58689 58904])
            ("ac-handle-pre-command" function nil nil [58906 59898])
            ("ac-handle-post-command" function nil nil [59900 60289])
            ("ac-flycheck-poll-completion-end-timer" variable nil nil [60291 60378])
            ("ac-syntax-checker-workaround" function nil nil [60380 61385])
            ("ac-setup" function nil nil [61387 61705])
            ("define-minor-mode" code nil nil [61722 62363])
            ("auto-complete-mode-maybe" function nil nil [62365 62563])
            ("define-global-minor-mode" code nil nil [62580 62702])
            ("ac-flyspell-workaround" function (:user-visible-flag t) nil [62751 63143])
            ("ac-linum-workaround" function (:user-visible-flag t) nil [63145 63430])
            ("ac-define-source" function (:arguments ("name" "source")) nil [63458 64045])
            ("ac-word-index" variable nil nil [64073 64099])
            ("ac-candidate-words-in-buffer" function (:arguments ("point" "prefix" "limit")) nil [64101 65007])
            ("ac-incremental-update-word-index" function nil nil [65009 65560])
            ("ac-update-word-index-1" function nil nil [65562 65983])
            ("ac-update-word-index" function nil nil [65985 66199])
            ("ac-word-candidates" function (:arguments ("buffer-pred")) nil [66201 66839])
            ("ac-define-source" code nil nil [66841 66914])
            ("ac-define-source" code nil nil [66916 67027])
            ("ac-define-source" code nil nil [67029 67264])
            ("ac-symbols-cache" variable nil nil [67289 67318])
            ("ac-clear-variable-every-10-minutes" code nil nil [67319 67373])
            ("ac-symbol-file" function (:arguments ("symbol" "type")) nil [67375 68859])
            ("ac-symbol-documentation" function (:arguments ("symbol")) nil [68861 70635])
            ("ac-symbol-candidates" function nil nil [70637 70938])
            ("ac-define-source" code nil nil [70940 71079])
            ("ac-functions-cache" variable nil nil [71106 71137])
            ("ac-clear-variable-every-10-minutes" code nil nil [71138 71194])
            ("ac-function-candidates" function nil nil [71196 71414])
            ("ac-define-source" code nil nil [71416 71604])
            ("ac-variables-cache" variable nil nil [71631 71662])
            ("ac-clear-variable-every-10-minutes" code nil nil [71663 71719])
            ("ac-variable-candidates" function nil nil [71721 71938])
            ("ac-define-source" code nil nil [71940 72083])
            ("ac-emacs-lisp-features" variable nil nil [72109 72144])
            ("ac-clear-variable-every-10-minutes" code nil nil [72145 72205])
            ("ac-emacs-lisp-feature-candidates" function nil nil [72207 72892])
            ("ac-define-source" code nil nil [72894 73071])
            ("defvaralias" code nil nil [73073 73137])
            ("ac-define-source" code nil nil [73156 73351])
            ("ac-define-source" code nil nil [73390 73497])
            ("ac-filename-cache" variable nil nil [73518 73548])
            ("ac-filename-candidate" function nil nil [73550 74341])
            ("ac-define-source" code nil nil [74343 74541])
            ("ac-define-source" code nil nil [74564 74653])
            ("auto-complete" package nil nil [74655 74679]))          
      :file "auto-complete.el"
      :pointmax 74711
      :fsize 74710
      :lastmodtime '(22618 16942 143606 120000)
      :unmatched-syntax nil))
  :file "!home!wrongway4you!.emacs.d!elpa!auto-complete-20161029.643!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
